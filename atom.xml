<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>落笔成殇的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-24T03:17:01.539Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Joker</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mongodb</title>
    <link href="http://yoursite.com/2019/10/24/mongodb/"/>
    <id>http://yoursite.com/2019/10/24/mongodb/</id>
    <published>2019-10-24T03:17:01.000Z</published>
    <updated>2019-10-24T03:17:01.539Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>node</title>
    <link href="http://yoursite.com/2019/10/21/node/"/>
    <id>http://yoursite.com/2019/10/21/node/</id>
    <published>2019-10-21T11:43:10.000Z</published>
    <updated>2019-10-22T12:07:23.938Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-NddeJs基础"><a href="#1-NddeJs基础" class="headerlink" title="1.NddeJs基础"></a>1.NddeJs基础</h1><h2 id="搭建服务器模型"><a href="#搭建服务器模型" class="headerlink" title="搭建服务器模型"></a>搭建服务器模型</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</span><br><span class="line">http.createServer(<span class="function">(<span class="params">req,res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.writeHead(<span class="number">200</span>,&#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>:<span class="string">"text/html;charset=utf8"</span></span><br><span class="line">    &#125;); </span><br><span class="line">    res.write();</span><br><span class="line">    res.end()</span><br><span class="line">&#125;).listen(<span class="number">3000</span>,() =&gt; &#123;      <span class="comment">//3000表示端口号</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Server Ok)</span></span><br><span class="line"><span class="string">&#125;)</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Express"><a href="#Express" class="headerlink" title="Express"></a>Express</h2><blockquote><p>基于Node.js平台，快速、开放、极简的web开发框架。</p></blockquote><ul><li><p>基础</p><ul><li>安装环境<ul><li>1、npm install -g express(web应用开发框架)</li><li>2、npm install -g express-generator(脚手架)</li></ul></li><li>创建工程<ul><li>1、express myapp(创建出的是jade模板，myapp是文件名)<br>  express -d myapp(ejs模板)</li><li>2、cd myapp (路径跳转到myapp文件夹下) &amp;&amp; npm i (自动读取package.json，下载所需要的所有包)                 //操作全在命令行中</li><li>3、npm start(在package.json定义好的脚本，可以自行更改，但更改过后需要写成 npm ren dev，dev是自定义的脚本。运行程序)</li><li>4、在package.json中。将start: node 改为 nodemon。 //修改后自动重启服务器</li></ul></li><li>在 app.js中注册路由 –&gt; <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> indexRouter = <span class="built_in">require</span>(<span class="string">'./routes/index'</span>);</span><br><span class="line"><span class="keyword">var</span> homeRouter = <span class="built_in">require</span>(<span class="string">'./routes/home'</span>);</span><br><span class="line"><span class="keyword">var</span> usersRouter = <span class="built_in">require</span>(<span class="string">'./routes/users'</span>);</span><br><span class="line"><span class="keyword">var</span> loginRouter = <span class="built_in">require</span>(<span class="string">'./routes/login'</span>);</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/'</span>, indexRouter);</span><br><span class="line">app.use(<span class="string">'/home'</span>,homeRouter);</span><br><span class="line">app.use(<span class="string">'/users'</span>, usersRouter);</span><br><span class="line">app.use(<span class="string">'/login'</span>, loginRouter);</span><br></pre></td></tr></table></figure></li></ul><p>在routes 下创建对应路由的js文件，并设置多级路由 –&gt; </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    router.get(<span class="string">'/'</span>, (req, res, next) =&gt; &#123;</span><br><span class="line">    res.render(<span class="string">'login'</span>,&#123;<span class="attr">title</span>:<span class="string">'title'</span>&#125;);    <span class="comment">//渲染页面，传递参数</span></span><br><span class="line">&#125;)</span><br><span class="line">router.get(<span class="string">'/a'</span>, (req, res, next) =&gt; &#123;</span><br><span class="line">    res.json(&#123;<span class="attr">ok</span>:<span class="number">1</span>&#125;);                       <span class="comment">//json数据，创建接口</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li>在views中创建对应路径的ejs文件<ul><li>后端嵌套模板开发方式(SSR - server side rending)</li></ul></li></ul></li></ul><table><thead><tr><th align="left">标签</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">&lt;% %&gt;</td><td align="left">流程控制标签</td></tr><tr><td align="left">&lt;%= %&gt;</td><td align="left">输出标签(原文输出HTML标签)</td></tr><tr><td align="left">&lt;%- %&gt;</td><td align="left">输出标签(HTML会被浏览器解析)</td></tr><tr><td align="left">&lt;%# %&gt;</td><td align="left">注释标签</td></tr><tr><td align="left">&lt;%- include(‘user/show’,{user:user}) %&gt;</td><td align="left">导入公共的模板内容</td></tr></tbody></table><ul><li>后端获取前端的get和post请求<ul><li>req.query 获取get</li><li>req.body 获取post</li><li>req.params 获取动态路由传来的参数<blockquote><p>以下是发送请求以及获取和处理的代码</p></blockquote><figure class="highlight html"><figcaption><span>js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 前端页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>密码： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'password'</span> <span class="attr">id</span>=<span class="string">'password'</span> <span class="attr">name</span>=<span class="string">'password'</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>login<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    $(<span class="string">'button'</span>).click(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">            url: <span class="string">'/login/validate'</span></span></span><br><span class="line">            data: &#123;</span><br><span class="line"><span class="javascript">                username: $(<span class="string">'#username'</span>).val(),</span></span><br><span class="line"><span class="javascript">                password: $(<span class="string">'#password'</span>).val()</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="javascript">            <span class="comment">// type: post   //  默认为get，可改为post</span></span></span><br><span class="line">            success(res) &#123;</span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(res.ok === <span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    location.href = <span class="string">'/home'</span>;    <span class="comment">//前端页面跳转</span></span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">'用户名密码不匹配'</span>);</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)   </span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 后端路由</span></span><br><span class="line">router.get(<span class="string">'/validate'</span>,(req,res,next)=&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span>(req.query.username === <span class="string">'lbcs'</span> &amp;&amp; req.query.password === <span class="string">'123'</span>) &#123;     <span class="comment">//query :获取get</span></span><br><span class="line">        res.redirect(<span class="string">'./home'</span>)   <span class="comment">//后端跳转页面</span></span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        res.redirect(<span class="string">'./login'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">router.get(<span class="string">'/validate'</span>,(req,res,next)=&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span>(req.body.username === <span class="string">'lbcs'</span> &amp;&amp; req.body.password === <span class="string">'123'</span>) &#123;     <span class="comment">//body :获取post</span></span><br><span class="line">        res.redirect(<span class="string">'./home'</span>)   <span class="comment">//后端跳转页面</span></span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        res.redirect(<span class="string">'./login'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-NddeJs基础&quot;&gt;&lt;a href=&quot;#1-NddeJs基础&quot; class=&quot;headerlink&quot; title=&quot;1.NddeJs基础&quot;&gt;&lt;/a&gt;1.NddeJs基础&lt;/h1&gt;&lt;h2 id=&quot;搭建服务器模型&quot;&gt;&lt;a href=&quot;#搭建服务器模型&quot; class=&quot;headerlink&quot; title=&quot;搭建服务器模型&quot;&gt;&lt;/a&gt;搭建服务器模型&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; http = &lt;span class=&quot;built_in&quot;&gt;require&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&#39;http&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;http.createServer(&lt;span class=&quot;function&quot;&gt;(&lt;span class=&quot;params&quot;&gt;req,res&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.writeHead(&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;,&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;text/html;charset=utf8&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.write();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    res.end()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;).listen(&lt;span class=&quot;number&quot;&gt;3000&lt;/span&gt;,() =&amp;gt; &amp;#123;      &lt;span class=&quot;comment&quot;&gt;//3000表示端口号&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&#39;Server Ok)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>JQuery</title>
    <link href="http://yoursite.com/2019/09/26/JQuery/"/>
    <id>http://yoursite.com/2019/09/26/JQuery/</id>
    <published>2019-09-26T11:28:24.000Z</published>
    <updated>2019-10-11T07:10:12.599Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JQuery总结"><a href="#JQuery总结" class="headerlink" title="JQuery总结"></a>JQuery总结</h1><h2 id="JQuery入门"><a href="#JQuery入门" class="headerlink" title="JQuery入门"></a>JQuery入门</h2><h3 id="选择器：’-’-就是JQuery的简写，是一个函数。"><a href="#选择器：’-’-就是JQuery的简写，是一个函数。" class="headerlink" title="选择器：’$’ ,就是JQuery的简写，是一个函数。"></a>选择器：’$’ ,就是JQuery的简写，是一个函数。</h3><ul><li><p>使用JQuery时，要注意取到的是JQuery的实例，还是原生DOM节点。两者有所不同</p></li><li><p>JQUery =&gt; DOM节点 ：$(‘h1’)[0]</p></li><li><p>DOM节点 =&gt; JQuery : let h1 = document.querySelector(‘h1’)        $(h1)</p></li><li><p>效果类似 document.querySelectorAll()，取到的是一个伪数组</p><a id="more"></a><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><ul><li><p>.html()</p></li><li><p>获取集合中第一个匹配元素的HTML内容,或是设置每一个匹配元素的html内容。</p></li><li><p>此方法使用的是innerHTML属性。</p></li><li><p>取得第一个元素时，()内不传任何参数；传参数时，则为所有匹配元素的节点设置html内容；</p></li><li><p>.val</p><ul><li>获取匹配元素的第一个元素的当前值，或设置匹配的元素集合中每个元素的值。</li><li>基本于.html类似。</li></ul></li><li><p>.attr / .prop</p><ul><li>.prop :获取匹配的元素集中第一个元素的属性（property）值，或设置每一个匹配元素的一个或多个属性。</li><li>只获得第一个值，如果要取到所有元素的属性值，使用循环，例如.each()或.map()</li><li>获取匹配的元素集合中的第一个元素的属性的值，或设置每一个匹配元素的一个或多个属性<font color="#f60"></font></li></ul></li><li><p>Attributes 和 Propertype之间的差异在特定情况下很重要。虽然都是取得属性值，但两者有些地方取到的值一样，有些时候不一样。</p></li><li><p>例如：selectIndex,tagName,nodeName,ownerDocument,deafultChecked,和deafultSelected应使用.prop方法进行取值或赋值。它们没有响应的属性(attributes)，只有特性(property)。</p></li><li><p>例如：考虑到一个DOM元素的HTML标记中定义的&lt;input type=’checkbox’ checked=’checked’(等号后可以不写)&gt;,并假设它是一个JS变量命名的elem：</p></li></ul><table><thead><tr><th align="left">属性名</th><th align="left">属性值</th></tr></thead><tbody><tr><td align="left">elem.checkd</td><td align="left">true(Boolean)将随着复选框状态的改变而改变</td></tr><tr><td align="left">$(elem).prop(‘checked’)</td><td align="left">true将随着复选框的状态的改变而改变</td></tr><tr><td align="left">elem.getAttribute(‘checked’)</td><td align="left">‘checked’(String)复选框的初始状态，不会改变</td></tr><tr><td align="left">$(elem).attr(‘checked’) (1,6)</td><td align="left">‘checked’ (String) 复选框的初始状态，不会改变</td></tr><tr><td align="left">$(elem).attr(“checked”) (1.6)</td><td align="left">“checked” (String) 复选框的初始状态;不会改变</td></tr><tr><td align="left">$(elem).attr(“checked”) (1.6.1+)</td><td align="left">“checked” (String) 将随着复选框状态的改变而改变</td></tr><tr><td align="left">$(elem).attr(“checked”) (pre-1.6)</td><td align="left">true (Boolean) 将随着复选框状态的改变而改变</td></tr></tbody></table><blockquote><p>根据W3C的表单规范，在chaecked属性是一个布尔属性，这意味着，如果这个属性(attribute)是目前存在，即便，该属性没有对应的值，或者被设置为空字符串，或甚至是’false’，相应的属性(property)为true。这才是真正的所有布尔属性(attributes)<br>然而，要记住的最重要的概念是checked特性（attribute）不是对应它checked属性（property）。特性（attribute）实际对应的是defaultChecked属性（property），而且仅用于设置复选框最初的值。checked特性（attribute）值不会因为复选框的状态而改变，而checked属性（property）会因为复选框的状态而改变。</p></blockquote><ul><li><font color="#f60">当设置属性名’class’属性时，必须使用引号</font></li><li>JQuery禁止改变一个input 和 button元素的type属性，并且在所有浏览器下将抛出一个错误，- .css()</li><li>获取匹配元素集合中的第一个元素的样式属性的值  或  设置每个匹配元素的一个或多个CSS属性。</li><li>设置属性值时，可以为属性值设置一个函数。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'div'</span>).css(<span class="string">'width'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> value * <span class="number">50</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li><p>xxxClass</p><ul><li><p>addClass(), removeClass(), hasClass() ,toggleClass()</p></li><li><p>为每个匹配的元素添加指定的类名;为每个匹配的元素删除指定的类名;判断元素是否有指定的类名;</p></li><li><p>在匹配的元素集合中的每个元素上添加或删除一个或多个样式类,取决于这个样式类是否存在或值切换属性。即：如果存在（不存在）就删除（添加）一个类。</p></li><li><p>切换多个样式类名时用空格隔开</p></li><li><p>可以传入一个函数做参数，返回应该显示的样式。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'div.foo'</span>).toggleClass(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//如果匹配元素的父元素有bar样式类名</span></span><br><span class="line"><span class="keyword">if</span>($(<span class="keyword">this</span>).parent().is(.bar))&#123;</span><br><span class="line"><span class="comment">//给匹配元素加上'happy'类</span></span><br><span class="line"><span class="keyword">return</span> <span class="string">'happy'</span>;</span><br><span class="line"><span class="comment">//否则，给匹配元素加上'sad'类</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">'sad'</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>.toggleClass(className,switch)。switch是一个boolean值，用于判断样式是否应该被移除。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.blue &#123;<span class="attr">color</span>:blue&#125;;</span><br><span class="line">.highlight &#123;<span class="attr">color</span>:red&#125;</span><br><span class="line"><span class="keyword">let</span> count = <span class="number">0</span>;</span><br><span class="line">$(<span class="string">'p'</span>).on(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="keyword">this</span>).find(<span class="string">'span'</span>).text(<span class="string">'clicks:'</span> + count);</span><br><span class="line">$(<span class="keyword">this</span>).toggleClass(<span class="string">'highlight'</span>, count % <span class="number">3</span> == <span class="number">0</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h3><ul><li>.show / hide  <ul><li>show:显示匹配的元素;hide:隐藏匹配的元素</li><li>如果没有参数，.hide()方法是最简单的方法来隐藏一个元素。</li></ul></li><li>.fadeIn / fadeOut<ul><li>用淡入 / 淡出的方式显示匹配元素</li></ul></li><li>.slideDown / .slideUp<ul><li>用滑动 / 滑出动画显示一个匹配元素</li></ul></li><li>.animate / .stop<ul><li>animate:根据一组css属性，执行自定义动画</li><li>所有使用动画的属性必须是数字的，除非另有说明；例如width,height或left可以执行动画，但是background-color不能。属性值的单位像素px,除非另有说明，单位em和%需要指定使用。除了样式属性，一些非样式的属性，如scrollTop 和 scrollLeft，以及自定义属性，也可以应用于动画。</li><li>持续时间以毫秒为单位，值越大动画执行的越慢，还可以提供’fast’和’slow’字符串，分别表示持续时间为200和600毫秒。</li><li>如果提供complete回调函数将在动画完成后被执行一次。这对于按顺序执行一系列不同动画时，特别有用。这个回调函数不设置任何参数，但是this会被传递到正在执行动画的DOM元素上，如果多个元素一起做动画效果，值得注意的是这个回调函数在每个匹配元素上执行一次，不是这个动画作为一个整体。</li><li>.stop:停止匹配元素当前正在运行的动画</li><li>.stop([queue],[clearQueue],[jumpToEnd])。queue: 停止动画的名称;clearQueue: 一个Boolean值，指示是否取消队列动画，默认值为false;jumpToEnd：一个boolean值，指示当前动画是否立即完成，默认false。</li></ul></li></ul><h2 id="JQuery进阶"><a href="#JQuery进阶" class="headerlink" title="JQuery进阶"></a>JQuery进阶</h2><h3 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h3><ul><li><p>children,parent,parents,find,next,prev,siblings</p><ul><li>取得匹配元素集合中每个元素的子元素</li><li>取得匹配元素集合中每个元素的父元素</li><li>取得匹配元素集合中每个元素的祖先元素</li><li>取得匹配元素集合中每个元素的后代元素</li><li>取得匹配的元素集合中每一个元素紧邻的后面同辈元素的元素集合。如果提供一个选择器，那么只有紧跟着的兄弟元素满足选择器时，才会返回此元素</li><li>取得匹配的元素集合中每一个元素紧邻的前面同辈元素的元素集合。如果提供一个选择器，那么只有前面着的兄弟元素满足选择器时，才会返回此元素</li><li>获得匹配元素集合中每个元素的兄弟元素,可以提供一个可选的选择器。<h3 id="DOM操作"><a href="#DOM操作" class="headerlink" title="DOM操作"></a>DOM操作</h3></li></ul></li><li><p>.append / .appendTo</p><ul><li>为每个匹配的元素里面的末尾处插入参数内容</li><li>将匹配的元素插入到目标元素的最后<blockquote><ul><li>.append()和.appendTo()两种方法功能相同，主要的不同是语法——内容和目标的位置不同。对于.append(), 选择表达式在函数的前面，参数是将要插入的内容。对于.appendTo()刚好相反，内容在方法前面，无论是一个选择器表达式 或创建作为标记上的标记，它都将被插入到目标容器的末尾。</li></ul></blockquote></li></ul></li><li><p>.prepend / .prependTo</p><ul><li>将参数内容插入到每个匹配元素的前面（元素内部）</li><li>将所有元素插入到目标前面</li><li>.prepend()和.prependTo()实现同样的功能，主要的不同是语法，插入的内容和目标的位置不同。 对于  .prepend() 而言，选择器表达式写在方法的前面，作为待插入内容的容器，将要被插入的内容作为方法的参数。而 .prependTo() 正好相反，将要被插入的内容写在方法的前面，可以是选择器表达式或动态创建的标记，待插入内容的容器作为参数。</li></ul></li><li><p>.after / .insertAfter</p><ul><li>在匹配元素集合中的每个元素后面插入参数所指定的内容，作为其兄弟节点。</li><li>在目标元素后面插入集合中每个匹配的元素(注：插入的元素作为目标元素的兄弟元素)。<blockquote><ul><li>The .after()和.insertAfter() 实现同样的功能。主要的不同是语法——特别是（插入）内容和目标的位置。 对于  .after(), 选择表达式在函数的前面，参数是将要插入的内容。对于 .insertAfter(), 刚好相反，内容在方法前面，它将被放在参数里元素的后面。</li></ul></blockquote></li></ul></li><li><p>.before / .insertBefore</p><ul><li>根据参数设定，在匹配元素的前面插入内容</li><li>在目标元素前面插入集合中每个匹配的元素(注：插入的元素作为目标元素的兄弟元素)。</li><li>The .before()和.insertBefore()实现同样的功能。主要的区别是语法——内容和目标的位置。 对于 .before()，选择表达式在函数前面，内容作为参数，而.insertBefore()刚好相反，内容在方法前面，它将被放在参数里元素的前面。</li></ul></li><li><p>.remove / .empty</p><ul><li>将匹配元素集合从DOM中删除。（注：同时移除元素上的事件及 jQuery 数据。）</li><li>从DOM中移除集合中匹配元素的所有子节点。</li><li>两者的区别，第一个连自己本身一起删除，第二个只删除子元素。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JQuery总结&quot;&gt;&lt;a href=&quot;#JQuery总结&quot; class=&quot;headerlink&quot; title=&quot;JQuery总结&quot;&gt;&lt;/a&gt;JQuery总结&lt;/h1&gt;&lt;h2 id=&quot;JQuery入门&quot;&gt;&lt;a href=&quot;#JQuery入门&quot; class=&quot;headerlink&quot; title=&quot;JQuery入门&quot;&gt;&lt;/a&gt;JQuery入门&lt;/h2&gt;&lt;h3 id=&quot;选择器：’-’-就是JQuery的简写，是一个函数。&quot;&gt;&lt;a href=&quot;#选择器：’-’-就是JQuery的简写，是一个函数。&quot; class=&quot;headerlink&quot; title=&quot;选择器：’$’ ,就是JQuery的简写，是一个函数。&quot;&gt;&lt;/a&gt;选择器：’$’ ,就是JQuery的简写，是一个函数。&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用JQuery时，要注意取到的是JQuery的实例，还是原生DOM节点。两者有所不同&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;JQUery =&amp;gt; DOM节点 ：$(‘h1’)[0]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;DOM节点 =&amp;gt; JQuery : let h1 = document.querySelector(‘h1’)        $(h1)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;效果类似 document.querySelectorAll()，取到的是一个伪数组&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>class</title>
    <link href="http://yoursite.com/2019/09/24/Class/"/>
    <id>http://yoursite.com/2019/09/24/Class/</id>
    <published>2019-09-23T23:14:51.000Z</published>
    <updated>2019-09-24T00:34:29.371Z</updated>
    
    <content type="html"><![CDATA[<h1 id="constructor-方法"><a href="#constructor-方法" class="headerlink" title="constructor 方法"></a>constructor 方法</h1><ul><li>constructor方法是类的默认方法，通过new命令生成对象实例时，自动调用该方法。一个类必须有constructor方法，如果没有显式定义，一个空的constructor方法会被默认添加</li><li>constructor方法默认返回实例对象(即this)，完全可以指定返回另一个对象。<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Foo</span></span>&#123;</span><br><span class="line">constuctor()&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">Object</span>.create(<span class="literal">null</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">new</span> Foo() <span class="keyword">instanceof</span> Foo)</span><br><span class="line"><span class="comment">//false</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>在上面代码中，conctructor函数返回一个全新的对象，结果导致实例对象不是Foo类的实例</p></blockquote><ul><li>类必须使用new调用，否则会报错。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;constructor-方法&quot;&gt;&lt;a href=&quot;#constructor-方法&quot; class=&quot;headerlink&quot; title=&quot;constructor 方法&quot;&gt;&lt;/a&gt;constructor 方法&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;constructor方法是类的
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>SQL语句</title>
    <link href="http://yoursite.com/2019/09/16/SQL%E8%AF%AD%E5%8F%A5/"/>
    <id>http://yoursite.com/2019/09/16/SQL语句/</id>
    <published>2019-09-16T11:28:45.000Z</published>
    <updated>2019-09-16T08:25:30.945Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL简介"><a href="#SQL简介" class="headerlink" title="SQL简介"></a>SQL简介</h1><h2 id="SQL简介-1"><a href="#SQL简介-1" class="headerlink" title="SQL简介"></a>SQL简介</h2><hr><ul><li>SQL(结构化查询语言)是用于访问和操作数据库中的数据的标准数据库编程语言。</li><li>SOL是关系数据库的标准语言。所有关系数据库管理系统(RDMS)，如MySQL、MS Access、Oracle、Sybase、Informix、Postgres和SQL Server都使用SQL作为它们的标准数据库语言。 </li></ul><h2 id="SQL是什么"><a href="#SQL是什么" class="headerlink" title="SQL是什么"></a>SQL是什么</h2><hr><ul><li>SQL 指结构化查询语言，全称是 Structured Query Language（是最初由IBM开发）。</li><li>SQL 是关系数据库系统的标准语言。</li><li>SQL 是一种 ANSI（American National Standards Institute 美国国家标准化组织）标准的计算机语言。<a id="more"></a><h2 id="SQl能做什么"><a href="#SQl能做什么" class="headerlink" title="SQl能做什么"></a>SQl能做什么</h2></li></ul><hr><ul><li>SQL可以创建新的数据库及其对象（表，索引，视图，存储过程，函数和触发器）。</li><li>SQL可以修改现有数据库的结构。</li><li>SQL可以从数据库中删除（删除）对象。</li><li>SQL可以TRUNCATE（删除）表中的所有记录。</li><li>SQL可以对数据字典进行COMMENT。</li><li>SQL可以RENAME一个对象。</li><li>SQL可以从数据库中选择（检索）数据。</li><li>SQL可以将数据插入到表中。</li><li>SQL可以更新表中的现有数据。</li><li>SQL可以从数据库表中删除记录。</li><li>SQL可以在数据库中设置用户的GRANT和REVOKE权限。</li></ul><h2 id="RDBMS"><a href="#RDBMS" class="headerlink" title="RDBMS"></a>RDBMS</h2><hr><ul><li>RDBMS指关系型数据库管理系统，全称 Relational Database Management System。</li><li>RDBMS是SQL的基础，同样也是现代数据库系统的基础，比如MS SQL Server、IBM DB2、Oracle、MySQl以及Microsoft Access.</li><li>RDBMS中的数据存储在被称为表的数据库对象中</li><li>表是相关的数据项的集合，它由列和行组成</li><li>每个表都被分解成称为字段的更小实体，字段是表中的一列，用于维护表中每条记录的特定信息。</li><li>记录(也称为行)是表中存在的每个单独条目。记录是表中的横向实体。</li><li>列是表中的垂直实体，其包含与表中的特定字段相关联的所有信息。</li></ul><h3 id="SQL约束"><a href="#SQL约束" class="headerlink" title="SQL约束"></a>SQL约束</h3><hr><p>约束是在表上的数据列上强制执行的规则，它们用于限制可以进入表中的数据类型。<br>这确保了数据库中的数据的准确性和可靠性<br>约束可以是列级别，也可以是表级别。列级约束仅应用于一行，而表级约束则应用于整个表<br>以下是SQL中可用的一些最常用的约束：</p><ul><li><font color="red">NOT NULL约束</font>:保证列中数据不能有NULL值</li><li><font color="red">DEFAULT约束</font>:提供该列数据未指定时所采用的默认值</li><li><font color="red">UNIQUE约束</font>:保证列中的所有数据各不相同</li><li><font color="red">主键约束</font>：唯一标识数据表中的行/记录</li><li><font color="red">外键约束</font>：唯一标识其它表中的一条行/记录</li><li><font color="red">CHECK约束</font>：此约束保证列中的所有值满足某一条件</li><li><font color="red">索引</font>：用于在数据库中快速创建或检索数据<br>约束可以在创建时规定(通过CREAE TABLE语句)，或者爱表创建后规定(通过ALTER TABLE语句)</li></ul><h3 id="数据完整性"><a href="#数据完整性" class="headerlink" title="数据完整性"></a>数据完整性</h3><hr><p>每个关系数据库管理系统都存在以下类型的数据完整性：</p><ul><li>实体完整性 - 表中没有重复行</li><li>域完整性 - 通过限制值的类型、格式或范围来强制执行给定列的有效条目</li><li>引用完整性 - 不能删除其他记录使用的行</li><li>用户定义的完整性 - 强制执行一些不属于实体、域或引用完整性的特定业务规则</li></ul><h3 id="数据库规范化"><a href="#数据库规范化" class="headerlink" title="数据库规范化"></a>数据库规范化</h3><hr><p>　数据库规范化是在数据库中有效地组织数据的过程。这个规范化过程有两个原因：</p><ul><li>消除冗余数据，例如，将相同的数据存储在多个表中。 </li><li>确保数据依赖关系是有意义的。<h2 id="SQL标准命令"><a href="#SQL标准命令" class="headerlink" title="SQL标准命令"></a>SQL标准命令</h2></li></ul><hr><p>与关系数据库交互的标准SQL命令是创建、选择、插入、更新、和删除，简单分为以下几组：</p><h3 id="DDL-数据定义语言"><a href="#DDL-数据定义语言" class="headerlink" title="DDL(数据定义语言)"></a>DDL(数据定义语言)</h3><p>数据定义语言用于改变数据库结构，包括创建、更改和删除数据库对象。用于操纵表结构的数据定义语言命令由：</p><ul><li><font color="red">CREATE TABLE</font> – 创建(在数据库中创建新表、表视图或其他对象)</li><li><font color="red">ALTER TABLE</font> – 更改(修改现有的数据库对象，如表)</li><li><font color="red">DROP TABLE</font> – 删除(删除数据库中的整个表、或其他对象的视图)</li></ul><h3 id="DML-数据操纵语言"><a href="#DML-数据操纵语言" class="headerlink" title="DML(数据操纵语言)"></a>DML(数据操纵语言)</h3><p>数据操纵语言用于检索、插入和修改数据，数据操纵语言是最常见的SQL命令<br>数据操纵语言命令包括</p><ul><li><font color="red">INSERT</font> – 插入(创建记录)</li><li><font color="red">DELETE</font> – 删除(删除记录)</li><li><font color="red">UPDATE</font> – 修改(修改记录)</li><li><font color="red">SELECT</font> – 检索(从一个或多个表检索某线索)</li></ul><h3 id="DCL-数据控制语言"><a href="#DCL-数据控制语言" class="headerlink" title="DCL(数据控制语言)"></a>DCL(数据控制语言)</h3><p>数据控制语言为用户提供权限控制命令<br>用于权限控制的命令有：</p><ul><li><font color="red">GRANT</font> – 授予权限</li><li><font color="red">REVOLE</font> – 撤销已授予的权限</li></ul><h1 id="SQL语法"><a href="#SQL语法" class="headerlink" title="SQL语法"></a>SQL语法</h1><h2 id="SQL语法规则"><a href="#SQL语法规则" class="headerlink" title="SQL语法规则"></a>SQL语法规则</h2><hr><ul><li>SQL语句总是以关键字未开始，如INSERT、DELETE、UPDATE、SELECT、CREATE(创建))、DROP(删除)</li><li>SQL语句以分号结尾</li><li>SQl不区分大小写。</li></ul><h2 id="一些最重要的SQL命令"><a href="#一些最重要的SQL命令" class="headerlink" title="一些最重要的SQL命令"></a>一些最重要的SQL命令</h2><hr><ul><li>SELECT - 从数据库中提取数据</li><li>UPDATE - 更新数据库中的数据</li><li>SELETE - 从数据库中删除数据</li><li>INSERT INTO - 向数据库中插入新数据</li><li>CREATE DATABASE - 创建新数据库</li><li>ALTER DATABASE - 修改数据库</li><li>CREATE TABLE - 创建新表</li><li>ALTER TABLE - 变更(改变数据库表)</li><li>DROP TABLE - 删除表</li><li>CREATE INDEX - 创建索引(搜索值)</li><li>DROP INDEX - 删除索引</li></ul><h4 id="SELECT语句"><a href="#SELECT语句" class="headerlink" title="SELECT语句"></a>SELECT语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name(s) <span class="keyword">FROM</span> table_name;</span><br></pre></td></tr></table></figure><h4 id="SEKECT语句和WHERE子句"><a href="#SEKECT语句和WHERE子句" class="headerlink" title="SEKECT语句和WHERE子句"></a>SEKECT语句和WHERE子句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> [*] <span class="keyword">FROm</span> [tableName] <span class="keyword">WHERE</span> [condition];</span><br></pre></td></tr></table></figure><h4 id="SELECT语句与WHERE和-或子句"><a href="#SELECT语句与WHERE和-或子句" class="headerlink" title="SELECT语句与WHERE和/或子句"></a>SELECT语句与WHERE和/或子句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> [*] <span class="keyword">FROM</span> [tableName] <span class="keyword">WHERE</span> [condition1] [<span class="keyword">AND</span> [<span class="keyword">OR</span>]] [condition2]...;</span><br></pre></td></tr></table></figure><h4 id="SELECT语句与ORDER-BY"><a href="#SELECT语句与ORDER-BY" class="headerlink" title="SELECT语句与ORDER BY"></a>SELECT语句与ORDER BY</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name()</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> column_name() <span class="keyword">ASC</span>(升序) <span class="keyword">or</span> <span class="keyword">DESC</span>(降序);</span><br></pre></td></tr></table></figure><h4 id="SELECT-DISTINCT-分区-子句"><a href="#SELECT-DISTINCT-分区-子句" class="headerlink" title="SELECT DISTINCT(分区)子句"></a>SELECT DISTINCT(分区)子句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 用于返回为一不同的值</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> column1, column2...columnN</span><br><span class="line"><span class="keyword">FROM</span> table_name;</span><br></pre></td></tr></table></figure><h4 id="SELECT-IN子句"><a href="#SELECT-IN子句" class="headerlink" title="SELECT IN子句"></a>SELECT IN子句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- IN操作符允许我们再WHERE子句中规定多个值</span></span><br><span class="line"><span class="keyword">SELECT</span> column1,column2...columnN</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name <span class="keyword">IN</span> (val<span class="number">-1</span>,val<span class="number">-2</span>,...val-N);</span><br></pre></td></tr></table></figure><h4 id="SELECT-LIKE-类-子句"><a href="#SELECT-LIKE-类-子句" class="headerlink" title="SELECT LIKE(类)子句"></a>SELECT LIKE(类)子句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- LIKE操作符用于在WHERE子句中搜索列中的指定模式</span></span><br><span class="line"><span class="keyword">SELECT</span> column1,column2....columnN</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name <span class="keyword">LIKE</span> &#123;PATTERN&#125;;</span><br></pre></td></tr></table></figure><h4 id="SELECT-COUNT-计数-子句"><a href="#SELECT-COUNT-计数-子句" class="headerlink" title="SELECT COUNT(计数)子句"></a>SELECT COUNT(计数)子句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- COUNT(column_name)函数返回指定列的值的数目(NULL不计入)</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(column_name)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> CONDITION;</span><br></pre></td></tr></table></figure><h4 id="SELECT与HAVING子句"><a href="#SELECT与HAVING子句" class="headerlink" title="SELECT与HAVING子句"></a>SELECT与HAVING子句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--WHERE关键字无法与合计函数一起使用</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">SUM</span>(column_name)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> CONDITION</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> column_name</span><br><span class="line"><span class="keyword">HAVING</span> (arithematic <span class="keyword">function</span> condition)</span><br></pre></td></tr></table></figure><h4 id="INSERT-INTO语句"><a href="#INSERT-INTO语句" class="headerlink" title="INSERT INTO语句"></a>INSERT INTO语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name (<span class="keyword">column</span>,column1,column2,column3...)</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="keyword">value</span>,value1,value2,value3)</span><br></pre></td></tr></table></figure><h4 id="UPDATE语句"><a href="#UPDATE语句" class="headerlink" title="UPDATE语句"></a>UPDATE语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> table_name</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">column</span>=<span class="keyword">value</span>,column1=value1,...</span><br><span class="line"><span class="keyword">WHERE</span> someColumn=someValuee</span><br></pre></td></tr></table></figure><h4 id="DELETE语句"><a href="#DELETE语句" class="headerlink" title="DELETE语句"></a>DELETE语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> tableName</span><br><span class="line"><span class="keyword">WHERE</span> someColumn = someValue</span><br></pre></td></tr></table></figure><h4 id="CREATE语句"><a href="#CREATE语句" class="headerlink" title="CREATE语句"></a>CREATE语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name(</span><br><span class="line">    column1 datatype,</span><br><span class="line">    column2 datatype,</span><br><span class="line">    column3 datatype,</span><br><span class="line">    .....</span><br><span class="line">    columnN datetype</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span>( one <span class="keyword">or</span> more <span class="keyword">columns</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="DROP语句"><a href="#DROP语句" class="headerlink" title="DROP语句"></a>DROP语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> table_name;</span><br></pre></td></tr></table></figure><h4 id="CREATE-INDEX语句"><a href="#CREATE-INDEX语句" class="headerlink" title="CREATE INDEX语句"></a>CREATE INDEX语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--在表中创建索引。在不读取整个表的情况下，索引使数据库应用程序可以更快的查询数据。</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> index_name</span><br><span class="line"><span class="keyword">ON</span> table_name(column1,column2,...columnN);</span><br></pre></td></tr></table></figure><h4 id="DROP-INDEX语句"><a href="#DROP-INDEX语句" class="headerlink" title="DROP INDEX语句"></a>DROP INDEX语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--删除表格中的索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> index_name;</span><br></pre></td></tr></table></figure><h4 id="DESC语句"><a href="#DESC语句" class="headerlink" title="DESC语句"></a>DESC语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--降序</span></span><br><span class="line">DESC table_name;</span><br></pre></td></tr></table></figure><h4 id="TRUNCATE截断表语句"><a href="#TRUNCATE截断表语句" class="headerlink" title="TRUNCATE截断表语句"></a>TRUNCATE截断表语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--删除。只删除数据不删除表的结构(定义)</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> table_name;</span><br></pre></td></tr></table></figure><h4 id="ALTER-TABLE"><a href="#ALTER-TABLE" class="headerlink" title="ALTER TABLE"></a>ALTER TABLE</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--在已有的表中添加、修改和删除列；</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name&#123;<span class="keyword">ADD</span>|<span class="keyword">DROP</span>|<span class="keyword">MODIFY</span>&#125; column_name &#123;data_ype&#125;</span><br></pre></td></tr></table></figure><h4 id="ALTER-TABLE语句-对表名重命名"><a href="#ALTER-TABLE语句-对表名重命名" class="headerlink" title="ALTER TABLE语句(对表名重命名)"></a>ALTER TABLE语句(对表名重命名)</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tale_name <span class="keyword">RENAME</span> <span class="keyword">TO</span> new_table_name;</span><br></pre></td></tr></table></figure><h4 id="USE语句"><a href="#USE语句" class="headerlink" title="USE语句"></a>USE语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--选择数据库并在该数据库中执行SQL操作</span></span><br><span class="line"><span class="keyword">USE</span> database_name;</span><br></pre></td></tr></table></figure><h4 id="COMMIT语句"><a href="#COMMIT语句" class="headerlink" title="COMMIT语句"></a>COMMIT语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></table></figure><h4 id="ROLLBACK语句"><a href="#ROLLBACK语句" class="headerlink" title="ROLLBACK语句"></a>ROLLBACK语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--回滚。放弃修改，使数据库状态恢复到此前的某个时刻</span></span><br><span class="line"><span class="keyword">ROLLBACK</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SQL简介&quot;&gt;&lt;a href=&quot;#SQL简介&quot; class=&quot;headerlink&quot; title=&quot;SQL简介&quot;&gt;&lt;/a&gt;SQL简介&lt;/h1&gt;&lt;h2 id=&quot;SQL简介-1&quot;&gt;&lt;a href=&quot;#SQL简介-1&quot; class=&quot;headerlink&quot; title=&quot;SQL简介&quot;&gt;&lt;/a&gt;SQL简介&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;SQL(结构化查询语言)是用于访问和操作数据库中的数据的标准数据库编程语言。&lt;/li&gt;
&lt;li&gt;SOL是关系数据库的标准语言。所有关系数据库管理系统(RDMS)，如MySQL、MS Access、Oracle、Sybase、Informix、Postgres和SQL Server都使用SQL作为它们的标准数据库语言。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;SQL是什么&quot;&gt;&lt;a href=&quot;#SQL是什么&quot; class=&quot;headerlink&quot; title=&quot;SQL是什么&quot;&gt;&lt;/a&gt;SQL是什么&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;SQL 指结构化查询语言，全称是 Structured Query Language（是最初由IBM开发）。&lt;/li&gt;
&lt;li&gt;SQL 是关系数据库系统的标准语言。&lt;/li&gt;
&lt;li&gt;SQL 是一种 ANSI（American National Standards Institute 美国国家标准化组织）标准的计算机语言。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PHP操作数据库</title>
    <link href="http://yoursite.com/2019/09/15/PHP%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://yoursite.com/2019/09/15/PHP操作数据库/</id>
    <published>2019-09-15T06:30:38.000Z</published>
    <updated>2019-09-15T06:30:38.301Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>PHP</title>
    <link href="http://yoursite.com/2019/09/15/PHP/"/>
    <id>http://yoursite.com/2019/09/15/PHP/</id>
    <published>2019-09-15T04:09:37.000Z</published>
    <updated>2019-09-15T06:30:10.040Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP语法"><a href="#PHP语法" class="headerlink" title="PHP语法"></a>PHP语法</h1><h2 id><a href="#" class="headerlink" title></a></h2><h4 id="基础规则"><a href="#基础规则" class="headerlink" title="基础规则"></a>基础规则</h4><ul><li><strong>php的代码部分全部要用半角的英文，使用全角的英文和符号会造成php代码报错。</strong></li><li><strong>一行代码写完，就必须要加分号。</strong></li><li><strong>在.php文件的时候，只用(a-zA-Z0-9)这些字符来命名文件。文件名不要用中文，不要用特殊符号，不要中间加空格，严格区分大小写</strong><a id="more"></a></li></ul><h4 id="变量的特点"><a href="#变量的特点" class="headerlink" title="变量的特点"></a>变量的特点</h4><ul><li>必须要以<font color="#3dc">‘$‘</font>开始.如变量x必须要写成’$x’；</li><li>变量的首字母不能以数字开始，只能以字母和下划线开头，变量名称只能包含数字字母下划线(a-zA-Z0-9)；</li><li>变量的命名区分大小写；</li><li>变量不要用特殊符号；</li><li>变量命名最好有意义；</li></ul><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><h4 id="双引号和单引号的区别"><a href="#双引号和单引号的区别" class="headerlink" title="双引号和单引号的区别"></a>双引号和单引号的区别</h4><ul><li>1、双引号解析变量，但是单引号不解析变量；</li><li>2、在双引号里面插入变量，变量后面如果有英文或中文字符，它会把这个字符和变量拼接起来，视为一整个变量。一定要在变量后面接上特殊字符，例如空格等分开；</li><li>3、如果在双引号里面插入变量的时候，后面不想有空格，可以拿大括号将变量包起来。</li><li>4、双引号解析转义字符，单引号不解析转义字符。但，单引号能解析’和;</li><li>5、单引号效率高于双引号，尽可能使用单引号；</li><li>6、双引号和单引号可以互插！！！双引号当中插入单引号，单引号当中插入变量，这个变量会被解析；</li><li>7、+号只代表数学运算，’.’用来链接字符串，</li><li>8、将定界符声明字符串视为双引号一样的功能来看待。<blockquote><p>字界符声明</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$dingjie = <span class="string">&lt;&lt;&lt;ABC</span></span><br><span class="line"><span class="string">如果</span></span><br><span class="line"><span class="string">    非要在这个滚犊子</span></span><br><span class="line"><span class="string">前</span></span><br><span class="line"><span class="string">    面&lt;br /&gt;</span></span><br><span class="line"><span class="string">    加上一段</span></span><br><span class="line"><span class="string">    &lt;i&gt;距离的话&lt;/i&gt;</span></span><br><span class="line"><span class="string">    我想说：&lt;h1&gt;思想有多远，你就给我滚多远&lt;/h1&gt;</span></span><br><span class="line"><span class="string">ABC;</span></span><br><span class="line"><span class="keyword">echo</span> $dingjie;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>栗：双引号解析变量，但是单引号不解析变量</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$jok = <span class="string">'笑溟沧海千钧破'</span>;</span><br><span class="line">$bat = <span class="string">"$jok 策定乾坤算因果"</span>;</span><br><span class="line"><span class="keyword">echo</span> $bat;  <span class="comment">//笑溟沧海千钧破 策定乾坤算因果;</span></span><br><span class="line">$bat = <span class="string">'$jok 策定乾坤算因果'</span>;</span><br><span class="line"><span class="keyword">echo</span> $bat;  <span class="comment">//$jok 策定乾坤算因果;</span></span><br></pre></td></tr></table></figure><blockquote><p>栗：将定界符声明字符串视为双引号一样的功能来看待</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$weilai = <span class="string">'努力才有未来'</span>;</span><br><span class="line">$mimang = <span class="string">'迷茫的原因是没有目标'</span>;</span><br><span class="line">$dingjie = <span class="string">&lt;&lt;&lt;ABC</span></span><br><span class="line"><span class="string">如果</span></span><br><span class="line"><span class="string">        <span class="subst">$weilai</span></span></span><br><span class="line"><span class="string">    非要\t在这"个滚"犊子</span></span><br><span class="line"><span class="string">前</span></span><br><span class="line"><span class="string">        '<span class="subst">$mimang</span>'</span></span><br><span class="line"><span class="string">    面&lt;br /&gt;</span></span><br><span class="line"><span class="string">    加上\n一段</span></span><br><span class="line"><span class="string">    &lt;i&gt;距离的话&lt;/i&gt;</span></span><br><span class="line"><span class="string">    我想说：&lt;h1&gt;思想有多远，你就跟我滚多远&lt;/h1&gt;</span></span><br><span class="line"><span class="string">ABC;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $dingjie;</span><br></pre></td></tr></table></figure><blockquote><p>var_dump() 是一个函数。向括号()中间插入变量。这个函数，会打印出来数据累心，还会对应显示便令的长度和值。</p></blockquote><h3 id="NULL类型"><a href="#NULL类型" class="headerlink" title="NULL类型"></a>NULL类型</h3><blockquote><p>主要有三种情况会产生空(null)类型;</p></blockquote><ul><li>1、通过变量赋值明确指定变量的值为NULL；</li><li>2、一个变量没有给任何值；</li><li>3、使用函数unset()将变量销毁掉</li></ul><h4 id="empty-函数"><a href="#empty-函数" class="headerlink" title="empty()函数"></a>empty()函数</h4><blockquote><p>empty()可以向括号中传入一个变量，这个变量的值如果为为false或者null的话，返回true；</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$apple = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($apple))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'笑溟沧海千钧破'</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'策定乾坤算因果'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//  笑溟沧海千钧破</span></span><br></pre></td></tr></table></figure><h4 id="isset-函数"><a href="#isset-函数" class="headerlink" title="isset()函数"></a>isset()函数</h4><blockquote><p>isset()可以向括号中间传入一个或者多个变量，变量与变量见用都i好分开，只要有以恶个变量为null，则返回false。否则，则返回true；</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$jia = <span class="keyword">false</span>;</span><br><span class="line">$result = <span class="keyword">isset</span>($jia);</span><br><span class="line">var_dump($result);  <span class="comment">//bool(true)</span></span><br><span class="line"></span><br><span class="line">$one = <span class="number">10</span>;</span><br><span class="line">$two = <span class="keyword">false</span>;</span><br><span class="line">$three = <span class="number">0</span>;</span><br><span class="line">$four = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">$result =<span class="keyword">isset</span>($one,$two,$three,$four);</span><br><span class="line">var_dump($result);  <span class="comment">//bool(false)</span></span><br></pre></td></tr></table></figure><h3 id="判断数据类型"><a href="#判断数据类型" class="headerlink" title="判断数据类型"></a>判断数据类型</h3><blockquote><p>使用is_*系列函数。is_types这一系列的函数，来进行判断某个东西是不是某个类型，如果是这个类型返回真，不是这个类型返回假。</p></blockquote><ul><li>1、gettype(传入一个变量)能够获得变量的类型</li><li>2、var_dumo(传入一个变量)输出变量类型和值<table><thead><tr><th align="left">判断</th><th align="left">类型</th></tr></thead><tbody><tr><td align="left">is_int</td><td align="left">是非为整数</td></tr><tr><td align="left">is_bool</td><td align="left">是否为布尔值</td></tr><tr><td align="left">is_float</td><td align="left">是否为浮点数</td></tr><tr><td align="left">is_string</td><td align="left">是否是字符串</td></tr><tr><td align="left">is_array</td><td align="left">是否是数组</td></tr><tr><td align="left">is_object</td><td align="left">是否是对象</td></tr><tr><td align="left">is_null</td><td align="left">是否为空</td></tr><tr><td align="left">is_resource</td><td align="left">是否为资源</td></tr><tr><td align="left">is_scalar</td><td align="left">是否为标量</td></tr><tr><td align="left">is_numeric</td><td align="left">是否为数值类型</td></tr><tr><td align="left">is_callable</td><td align="left">是否为函数</td></tr></tbody></table></li></ul><h4 id="数据类型转化"><a href="#数据类型转化" class="headerlink" title="数据类型转化"></a>数据类型转化</h4><ul><li>1，整型的0为假，其他整型值全为真</li><li>2, 浮点的0.0，布尔值的假。小数点后只要有一个非零的数值即为真。</li><li>3，空字符串为假，只要里面有一个空格都算真。</li><li>4，字符串的0，也将其看作是假。其他的都为真</li><li>5，空数组也将其视为假，只要里面有一个值，就为真。</li><li>6，空也为假</li><li>7, 未声明成功的资源也为假</li></ul><h5 id="强制类型转换"><a href="#强制类型转换" class="headerlink" title="强制类型转换"></a>强制类型转换</h5><ul><li>1、使用intval()、floatval()、strval()函数进行类型转换；</li><li>2、变量前加上()里面写类型，将它转化后赋值给其它变量；</li><li>3、settype(变量，类型)直接改变变量本身；</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$jok = <span class="number">1.23</span>;</span><br><span class="line">$bat = intval($jok);</span><br><span class="line">var_dump($bat); <span class="comment">//int(1)</span></span><br><span class="line">$jok = <span class="number">5</span>;</span><br><span class="line">$bat = floatval($jok);</span><br><span class="line">var_dump($bat); <span class="comment">//float(5)</span></span><br><span class="line">$jok = <span class="number">23</span>;</span><br><span class="line">$bat = strval($jok);</span><br><span class="line">var_dump($bat); <span class="comment">//string(2) "23"</span></span><br><span class="line"></span><br><span class="line">$transfer = <span class="number">12.8</span>;</span><br><span class="line">$jok = (int)$transfer;  <span class="comment">//int(12) </span></span><br><span class="line">var_dump($jok);    </span><br><span class="line">$jok = (bool) $transfer;</span><br><span class="line">var_dump($jok); <span class="comment">//bool(true)</span></span><br><span class="line">$bool = <span class="keyword">true</span>;</span><br><span class="line">$jok = (int)$bool;   </span><br><span class="line">var_dump($jok); <span class="comment">//int(1)</span></span><br><span class="line">$fo = <span class="number">250</span>;</span><br><span class="line">$jok = (<span class="keyword">array</span>)$fo;</span><br><span class="line">var_dump($jok); <span class="comment">//array(1) &#123; [0]=&gt; int(250) &#125;</span></span><br><span class="line"></span><br><span class="line">$fo = <span class="number">250.18</span>;</span><br><span class="line">settype($fo,<span class="string">'int'</span>);</span><br><span class="line">var_dump($fo);  <span class="comment">//int(250)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>define(常量名，常量值)</p><ul><li>常量值只能为标量</li><li>常量名可以小写，但是通常大写</li><li>常量名可以不加引号，但是通常加上引号</li><li>在字符串中调用常量的时候，必须在引号外面</li><li>常量名建议只用字母和下划线<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="string">'MY_NAME'</span>,<span class="string">'Joker'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> MY_NAME;</span><br><span class="line"><span class="comment">//下面是错误的调用方式</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'我的名字是MY_NAME'</span>;</span><br><span class="line"><span class="comment">//正确的调用方式该这么写</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'I'</span> . <span class="string">'&amp;nbsp '</span> . MY_NAME;</span><br></pre></td></tr></table></figure></li></ul><table><thead><tr><th align="left">常量名</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">LINE</td><td align="left">当前所在的行</td></tr><tr><td align="left">FILE</td><td align="left">当前文件在服务器的路径</td></tr><tr><td align="left">FUNCTIOIN</td><td align="left">当前函数名</td></tr><tr><td align="left">CLASS</td><td align="left">当前类名</td></tr><tr><td align="left">METHOD</td><td align="left">当前成员方法名</td></tr><tr><td align="left">PHP_OS</td><td align="left">PHP运行的操作系统</td></tr><tr><td align="left">PHP_VERSION</td><td align="left">当前PHP的版本</td></tr><tr><td align="left">TRAIT</td><td align="left">Trait 的名字,php5.4新加</td></tr><tr><td align="left">DIR</td><td align="left">文件所在的目录</td></tr><tr><td align="left">NAMESPACE</td><td align="left">当前命名空间的名称（区分大小写）</td></tr></tbody></table><p><strong>待续…</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;PHP语法&quot;&gt;&lt;a href=&quot;#PHP语法&quot; class=&quot;headerlink&quot; title=&quot;PHP语法&quot;&gt;&lt;/a&gt;PHP语法&lt;/h1&gt;&lt;h2 id&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h4 id=&quot;基础规则&quot;&gt;&lt;a href=&quot;#基础规则&quot; class=&quot;headerlink&quot; title=&quot;基础规则&quot;&gt;&lt;/a&gt;基础规则&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;php的代码部分全部要用半角的英文，使用全角的英文和符号会造成php代码报错。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一行代码写完，就必须要加分号。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在.php文件的时候，只用(a-zA-Z0-9)这些字符来命名文件。文件名不要用中文，不要用特殊符号，不要中间加空格，严格区分大小写&lt;/strong&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>面向对象</title>
    <link href="http://yoursite.com/2019/09/10/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <id>http://yoursite.com/2019/09/10/面向对象/</id>
    <published>2019-09-10T00:43:41.000Z</published>
    <updated>2019-09-15T10:44:29.310Z</updated>
    
    <content type="html"><![CDATA[<p>面向对象：(Object Briented Programing)，是一种相对面向过程的一种程序设计的思想</p><ul><li>1、封装(保护了内部数据，隐藏内部的实现细节)</li><li>2、继承(代码复用)</li><li>3、多态(代码的灵活性)</li></ul><p>类、实例<br>子类、父类(字类继承了父类，可以复用父类的代码)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span> (<span class="params">name,age</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Person.prototype.eat = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//  将eat放在Person的prototype上，所有使用Person neww处来的实例，就斗鱼eat方法；</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> Person(<span class="string">'xiaoMing'</span>,<span class="number">18</span>)</span><br></pre></td></tr></table></figure><ul><li>在new时，流览器帮我们做了以下的事;<ul><li>1、创建一个对象。<ul><li>该对象上有一个属性 <strong>proto</strong>(每个对象都有)，该属性，就是其构造函数的prototype</li></ul></li><li>2、将构造函数内的this，指向这个对象(p).</li><li>3、执行构造函数</li><li>4、返回了这个对象</li></ul></li></ul><p>访问一个对象的属性时，现在对象本身上查找，如果找到，则直接返回该属性的值<br>如果没有，则会在对象的<strong>proto</strong>上查找</p><p>prototype属性，只有函数有，其他对象没有<br>它是一个函数的属性，属性值为一个对象<br>使用该构造函数new处来的对象，都会共享prototype上的属性</p><img src="https://imgchr.com/i/n2ZVA0">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;面向对象：(Object Briented Programing)，是一种相对面向过程的一种程序设计的思想&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1、封装(保护了内部数据，隐藏内部的实现细节)&lt;/li&gt;
&lt;li&gt;2、继承(代码复用)&lt;/li&gt;
&lt;li&gt;3、多态(代码的灵活性)&lt;/li&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>js动画</title>
    <link href="http://yoursite.com/2019/09/10/js%E5%8A%A8%E7%94%BB/"/>
    <id>http://yoursite.com/2019/09/10/js动画/</id>
    <published>2019-09-09T23:19:31.000Z</published>
    <updated>2019-09-15T10:46:26.124Z</updated>
    
    <content type="html"><![CDATA[<p><strong>元素运动的本质：每间隔一个小的时间，改变元素的属性一次，间隔时间短，看起来就是连续的。(最好保证60帧)</strong></p><blockquote><p>根据所传的属性名和对应的目标位置，来实现过渡</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    div&#123;</span><br><span class="line">        width:50px;</span><br><span class="line">        height:50px;</span><br><span class="line">        background:red;</span><br><span class="line">        position:absolute;</span><br><span class="line">        left:1500px;</span><br><span class="line">        top:100px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> div = <span class="built_in">document</span>.querySelector(<span class="string">'div'</span>);</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">options</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//  遍历对象的所有属性，来得知要改变那些属性，以及这些属性对应的目标位置</span></span></span><br><span class="line"><span class="javascript">                id = setInterval(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">for</span>(<span class="keyword">let</span> shuXingMing <span class="keyword">in</span> options)&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> current = <span class="built_in">window</span>.getComputedStyle(div,<span class="literal">null</span>).getPropertyValue([shuXingMing]);</span></span><br><span class="line"><span class="javascript">                        current = <span class="built_in">parseInt</span>(current);</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> target = options[shuXingMing]</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> speed = (target - current) / <span class="number">25</span></span></span><br><span class="line"><span class="javascript">                        speed = speed &gt; <span class="number">0</span> ? <span class="built_in">Math</span>.ceil(speed) : <span class="built_in">Math</span>.floor(speed)</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">if</span>(speed === <span class="number">0</span>)&#123;</span></span><br><span class="line">                            clearInterval(id)</span><br><span class="line">                        &#125;</span><br><span class="line"><span class="javascript">                        div.style[shuXingMing] = current + speed + <span class="string">'px'</span></span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,16)</span><br><span class="line">            &#125;</span><br><span class="line">            move(&#123;</span><br><span class="line">                left:300,</span><br><span class="line">                top:100</span><br><span class="line">            &#125;)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="window-getComputedStyle"><a href="#window-getComputedStyle" class="headerlink" title="window.getComputedStyle()"></a>window.getComputedStyle()</h2><p>该方法返回一个对象，该对象再应用活动样式并解析这些值可能包括的任何基本计算后报告元素的所有CSS属性的值。私有的CSS属性值可以通过对象提供的API或通过简单的使用CSS属性名称进行索引来访问。</p><p>语法：let style = window.getComputedStyle(element,[pseudoElt])</p><ul><li>element ： 用于获取计算机样式的element</li><li>pseudoElt(可选) ： 指定一个要匹配的伪元素的字符串，必须对普通元素省略(或null)</li></ul><p><em>window.getComputedStyle返回的对象是只读的</em></p><p>getComputedStyle可以从为伪元素拉取样式信息，栗如：::after 、::before 、::marker 、 ::line-marker 一起查看</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">h3::after &#123;</span><br><span class="line">    content: "I joker!";</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>generated content<span class="tag">&lt;/<span class="name">h3</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> h3 = <span class="built_in">document</span>.querySelector(<span class="string">'h3'</span>), </span></span><br><span class="line"><span class="javascript">    result = getComputedStyle(h3,<span class="string">'::after'</span>).content;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">console</span>.log(result) <span class="comment">//  I joker!</span></span></span><br><span class="line">     </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="CSSStyleDeclaration-getPropertyValue"><a href="#CSSStyleDeclaration-getPropertyValue" class="headerlink" title="CSSStyleDeclaration.getPropertyValue()"></a>CSSStyleDeclaration.getPropertyValue()</h2><p>此接口会返回以恶个DOMString，这个返回值将会包含预请求的CSS属性样式</p><p>语法：let value = style.getPropertyValue(property)</p><ul><li>property ： 应是一个CSSString，为所需要查询的CSS属性名称</li><li>返回值：value是DOMString，包含有欲查找的CSS属性的值，若原CSSStyyeDeclaration没有设置对应属性，则返回空字符串</li></ul><blockquote><p>栗：</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> current = <span class="built_in">window</span>.getComputedStyle(div,<span class="literal">null</span>).getPropertyValue(top);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;元素运动的本质：每间隔一个小的时间，改变元素的属性一次，间隔时间短，看起来就是连续的。(最好保证60帧)&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;根据所传的属性名和对应的目标位置，来实现过渡&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    div&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        width:50px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        height:50px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        background:red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        position:absolute;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        left:1500px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        top:100px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; div = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;div&#39;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;move&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;options&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//  遍历对象的所有属性，来得知要改变那些属性，以及这些属性对应的目标位置&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                id = setInterval(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;=&amp;gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; shuXingMing &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; options)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; current = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.getComputedStyle(div,&lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;).getPropertyValue([shuXingMing]);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                        current = &lt;span class=&quot;built_in&quot;&gt;parseInt&lt;/span&gt;(current);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; target = options[shuXingMing]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; speed = (target - current) / &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                        speed = speed &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.ceil(speed) : &lt;span class=&quot;built_in&quot;&gt;Math&lt;/span&gt;.floor(speed)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(speed === &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            clearInterval(id)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                        div.style[shuXingMing] = current + speed + &lt;span class=&quot;string&quot;&gt;&#39;px&#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;,16)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            move(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                left:300,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                top:100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>瀑布流</title>
    <link href="http://yoursite.com/2019/09/09/%E7%80%91%E5%B8%83%E6%B5%81/"/>
    <id>http://yoursite.com/2019/09/09/瀑布流/</id>
    <published>2019-09-09T00:34:15.000Z</published>
    <updated>2019-09-09T07:41:27.869Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//思路</span></span><br><span class="line">    <span class="comment">//设定每张图片的位置</span></span><br><span class="line">        <span class="comment">//取到每张图片，循环设定其位置</span></span><br><span class="line">        <span class="comment">//设定第一行图片：top:0;left:索引*图片宽度</span></span><br><span class="line">        <span class="comment">//其他行：找到最矮的列-&gt;设定位置：</span></span><br><span class="line">    <span class="comment">//更新高度</span></span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    <span class="comment">//高度数组：记录每列的高度</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">waterfall</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//  取到所有盒子</span></span><br><span class="line">        <span class="keyword">var</span> boxes = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.box'</span>)</span><br><span class="line">        <span class="keyword">var</span> boxW = boxes[<span class="number">0</span>].offsetWidth</span><br><span class="line">        <span class="keyword">var</span> col = <span class="built_in">Math</span>.floor(<span class="built_in">window</span>.innerWidth / boxW)</span><br><span class="line">        <span class="keyword">var</span> heightArray = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; boxer.length; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i &lt; col)&#123;</span><br><span class="line">                <span class="comment">//  第一行</span></span><br><span class="line">                boxes[i].style.top = <span class="number">0</span>;</span><br><span class="line">                boxes[i].style.left = i * boxW + <span class="string">'px'</span></span><br><span class="line">                heightArray.push(boxes[i].offsetHeight)</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//  其他行</span></span><br><span class="line">                <span class="comment">//  使用展开运算符'...'，将heightArray展开，之后，传递给Math.min()，就可以取到最小值</span></span><br><span class="line">                <span class="keyword">var</span> minH = <span class="built_in">Math</span>.min(...heightArray)</span><br><span class="line">                <span class="keyword">var</span> minIndex = heightArray.indexOf(minH);</span><br><span class="line">                boxes[i].style.top = minH + <span class="string">'px'</span>;</span><br><span class="line">                boxes[i].style.left = minIndex * boxW + <span class="string">'px'</span>;</span><br><span class="line">                hieghtArray[minIndex] = minH + boxes[i].offsetHeight;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">window</span>.onresize = <span class="built_in">window</span>.onload = waterfall()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>ES6</title>
    <link href="http://yoursite.com/2019/09/06/ES6/"/>
    <id>http://yoursite.com/2019/09/06/ES6/</id>
    <published>2019-09-06T12:37:20.000Z</published>
    <updated>2019-09-15T10:45:26.802Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、let命令"><a href="#1、let命令" class="headerlink" title="1、let命令"></a>1、let命令</h1><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><ul><li>ES6新增了let命令，用来声明变量。它的用法类似于var。但是所声明的变量，只在let命令所在的代码块内有效。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">    a&#123;i&#125; = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">a[<span class="number">6</span>]();</span><br></pre></td></tr></table></figure><ul><li><p>上面代码中，变量i是var命令声明的，在全局范围内都有效，所以全局只有一个变量i。每一次循环，变量i的值都会发生改变，而循环内被赋给数组a的函数内部的console.log(i)，里面的i指向的就是全局的i。也就是说，所有数组a的成员里面的i，指向的都是同一个i，导致运行时输出的是最后一轮的i的值，也就是 10。</p><a id="more"></a><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>;i++)&#123;</span><br><span class="line">    a&#123;i&#125; = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(i)</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line">a[<span class="number">6</span>]()</span><br></pre></td></tr></table></figure></li><li><p>上面代码中，变量i是let声明的，当前的i只在本轮循环有效，所以每一次循环的i其实都是一个新的变量，所以最后输出的是6。你可能会问，如果每一轮循环的变量i都是重新声明的，那它怎么知道上一轮循环的值，从而计算出本轮循环的值？这是因为 JavaScript 引擎内部会记住上一轮循环的值，初始化本轮的变量i时，就在上一轮循环的基础上进行计算。</p></li></ul><p><strong>另外，for循环还有一个特殊之处，就是设置循环变量的那部分是一个父作用域，而循环内部是一个单独的子作用域。</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">let</span> i = <span class="string">'abc'</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 'abc' 'abc' 'abc'</span></span><br></pre></td></tr></table></figure><ul><li>函数内部的变量i与循环变量i不在同一个作用域，有各自独自的作用域</li></ul><hr><h2 id="不存在变量提升"><a href="#不存在变量提升" class="headerlink" title="不存在变量提升"></a>不存在变量提升</h2><ul><li>var命令会发生’变量声明’提升，即变量可以在声明之前使用(但是赋值不会)，值为’underfined’.</li><li>let命令改变了语法行为，它所声明的变量一定要在声明后使用，否则报错。</li></ul><hr><h2 id="暂时性死区"><a href="#暂时性死区" class="headerlink" title="暂时性死区"></a>暂时性死区</h2><ul><li>只要块级作用域存在let指令，它所声明的变量就’绑定’(binding)这个区域，不再受外部的影响</li><li>ES6明确规定，如果区块中存在let和const命令，这个区块对这些命令声明的变量，从一开始就形成了封闭作用域。凡是在声明之前就使用这些变量，就会报错</li><li>总之，在代码框内，使用let命令声明变量之前，该变量都是不可用的，这在语法上，被称之为’暂时性死区’，简称TDZ；</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">  <span class="comment">// TDZ开始</span></span><br><span class="line">  tmp = <span class="string">'abc'</span>; <span class="comment">// ReferenceError</span></span><br><span class="line">  <span class="built_in">console</span>.log(tmp); <span class="comment">// ReferenceError</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> tmp; <span class="comment">// TDZ结束</span></span><br><span class="line">  <span class="built_in">console</span>.log(tmp); <span class="comment">// undefined</span></span><br><span class="line"></span><br><span class="line">  tmp = <span class="number">123</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(tmp); <span class="comment">// 123</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>上面代码中，在let命令声明变量tmp之前，都属于变量tmp的“死区”。</p></li><li><p>有些’死区’不容易被发现</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params">x = y, y = <span class="number">2</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> [x, y];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">bar(); <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure></li><li><p>上面代码中，调用bar函数之所以报错（某些实现可能不报错），是因为参数x默认值等于另一个参数y，而此时y还没有声明，属于“死区”。如果y的默认值是x，就不会报错，因为此时x已经声明了。</p></li><li><p>ES6规定暂时性死区和let、const语句不出现变量声明提升，主要是为了减少运行时错误，防止在变量声明前就使用这个变量，从而导致医疗之外的行为。</p></li><li><p>总之，暂时性死区的本质就是，只要已进入当前作用域，所需使用的变量就已经存在了，但是不可获取，只有等到声明变量的那一行代码出现，才可以获取和使用该变量。</p></li></ul><hr><h2 id="不允许重复声明"><a href="#不允许重复声明" class="headerlink" title="不允许重复声明"></a>不允许重复声明</h2><p><strong>let不允许在相同的作用域内，重置声明同一个变量。</strong></p><hr><h1 id="2、块级作用域"><a href="#2、块级作用域" class="headerlink" title="2、块级作用域"></a>2、块级作用域</h1><ul><li><p>ES5只有全局作用域，没有块级作用域。</p><ul><li><p>第一个问题:内层变量可能会覆盖外层变量</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tmp = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(tmp);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> tmp = <span class="string">'hello world'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">f(); <span class="comment">// undefined </span></span><br><span class="line"><span class="comment">//  上面代码的原意是，if代码块的外部使用外层的tmp变量，内部使用内层的tmp变量。</span></span><br><span class="line"><span class="comment">//但是，函数f执行后，输出结果为undefined，原因在于变量提升，导致内层的tmp变量覆盖了外层的tmp变量。</span></span><br></pre></td></tr></table></figure></li><li><p>第二个问题：用来计数的循环变量泄露为全局变量</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s = <span class="string">'hello'</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; s.length; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(s[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(i); <span class="comment">// 5</span></span><br><span class="line"><span class="comment">//  上面代码中，变量i只用来控制循环，但是循环结束后，并没有消失，泄露成了全局变量</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="ES6的块级作用域"><a href="#ES6的块级作用域" class="headerlink" title="ES6的块级作用域"></a>ES6的块级作用域</h2><ul><li>let实际上为javascript新增了块级作用域</li><li>ES6允许块级作用域的任意嵌套</li><li>内层作用域可以定义外层作用域的同名变量</li></ul><hr><h2 id="块级作用域与函数声明"><a href="#块级作用域与函数声明" class="headerlink" title="块级作用域与函数声明"></a>块级作用域与函数声明</h2><ul><li>ES6引入了块级作用域，明确允许在块级作用域中声明函数。ES6规定，块级作用域中，函数声明语句的行为类似于let，在快级作用域之外不可调用</li><li>如果改变了块级作用域内声明的函数的处理规则，显然会对老代码产生很大影响，为了减轻因此产生的不兼容问题，ES6在附录B里规定，浏览器的的实现可以不遵守上面的规定，有自己的处理方式：<ul><li>允许在块级作用域内声明函数</li><li>函数声明类似于var，即会提升到全局作用域或函数作用域的顶部</li><li>同时，函数声明还会提升到所在块级作用域的头部。</li></ul></li><li><em>上面三条规则只对ES6的浏览器实现有效，其他环境不用遵守，还是将块级作用域的函数声明当作let处理</em></li><li>考虑到环境导致的行为差异太大，应该避免在块级作用域内声明函数，如果确实需要，也应该写成函数表达式，而不是函数声明语句。</li><li>ES6块级作用域必须有大括号，如果没有大括号，JavaScript引擎认为不存在块级作用域</li></ul><h1 id="3、const-命令"><a href="#3、const-命令" class="headerlink" title="3、const 命令"></a>3、const 命令</h1><h2 id="基本用法-1"><a href="#基本用法-1" class="headerlink" title="基本用法"></a>基本用法</h2><ul><li>const声明一个只读的常量。一旦声明，常量的值就不能改变。</li><li>const声明的变量不得改变值，这意味着，const一旦声明变量，就必须立即初始化，不能留到以后赋值。</li><li>const的作用域与let命令相同：只在声明所在的块级作用域内有效。</li><li>const命令声明的常量也是不提升，同样存在暂时性死区，只能在声明的位置后面使用。</li><li>const声明的常量，也与let一样不可重复声明。</li></ul><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>const实际上保证的，并不是变量的值不得改动，认识变量指向的那个内存地址所保存的数据不得改动。遂于简单类型的数据(数字，字符串，布尔值)，值就保存在变量指向的那个内存地址，因此等同于常量，但对于复合类型的数据(主要是对象和数组)，变量指向的内存地址，保存的只是一个指向实际数据的指针，const只能保证这个指针是固定的(即总是指向另一个固定的地址)，至于它指向的数据结构是不是可变的，就完全不能控制了。因此，将一个对象声明为常量必须非常小心。</p><p>Object.freeze ： 将对象冻结，使添加新属性不起作用。</p><h1 id="4、顶层对象的属性"><a href="#4、顶层对象的属性" class="headerlink" title="4、顶层对象的属性"></a>4、顶层对象的属性</h1><ul><li><p>顶层对象，在浏览器环境指的是window对象，在Node值得是global对象。ES5之中，顶层对象的属性与全局变量是等价的。</p></li><li><p>ES6一方面规定，为了保持兼容性，var命令和function命令声明的全局变量，依旧是顶层对象的属性；另一方面规定，let命令、const命令、class命令声明的全局变量，不属于顶层对象的属性。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// 如果在 Node 的 REPL 环境，可以写成 global.a</span></span><br><span class="line"><span class="comment">// 或者采用通用方法，写成 this.a</span></span><br><span class="line"><span class="built_in">window</span>.a <span class="comment">// 1</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">window</span>.b <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure></li><li><p>上面代码中，全局变量a为var命令声明，所以它是顶层对象的属性；全局变量b由let命令声明，所以它不是顶层对象的属性，返回undefined</p></li></ul><h1 id="5、globalThis"><a href="#5、globalThis" class="headerlink" title="5、globalThis"></a>5、globalThis</h1><ul><li>JavaScript语言存在一个顶层对象，它提供全局环境(即全局作用域)，所有代码都是在这个环境中运行。但是，顶层对象在各种实现里面是不统一的。<ul><li>浏览器里，顶层对象是window，但Node和Web Worker没有window</li><li>浏览器和 Web Worker 里面，self也指向顶层对象，但是 Node 没有self</li><li>Node 里面，顶层对象是global，但其他环境都不支持</li></ul></li><li>同一段代码为了能够在各种环境，都能取到顶层对象，现在一般是使用this变量，但是有局限性。<ul><li>全局环境中，this会返回顶层对象。但是，Node 模块和 ES6 模块中，this返回的是当前模块。</li><li>函数里面的this，如果函数不是作为对象的方法运行，而是单纯作为函数运行，this会指向顶层对象。但是，严格模式下，这时this会返回undefined。</li><li>不管是严格模式，还是普通模式，new Function(‘return this’)()，总是会返回全局对象。但是，如果浏览器用了 CSP（Content Security Policy，内容安全策略），那么eval、new Function这些方法都可能无法使用。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1、let命令&quot;&gt;&lt;a href=&quot;#1、let命令&quot; class=&quot;headerlink&quot; title=&quot;1、let命令&quot;&gt;&lt;/a&gt;1、let命令&lt;/h1&gt;&lt;h2 id=&quot;基本用法&quot;&gt;&lt;a href=&quot;#基本用法&quot; class=&quot;headerlink&quot; title=&quot;基本用法&quot;&gt;&lt;/a&gt;基本用法&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ES6新增了let命令，用来声明变量。它的用法类似于var。但是所声明的变量，只在let命令所在的代码块内有效。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;i&amp;lt;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a&amp;#123;i&amp;#125; = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a[&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;]();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;上面代码中，变量i是var命令声明的，在全局范围内都有效，所以全局只有一个变量i。每一次循环，变量i的值都会发生改变，而循环内被赋给数组a的函数内部的console.log(i)，里面的i指向的就是全局的i。也就是说，所有数组a的成员里面的i，指向的都是同一个i，导致运行时输出的是最后一轮的i的值，也就是 10。&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://yoursite.com/2019/09/05/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://yoursite.com/2019/09/05/正则表达式/</id>
    <published>2019-09-05T08:48:31.000Z</published>
    <updated>2019-09-15T10:45:49.018Z</updated>
    
    <content type="html"><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><h2 id="正则表达式中的特殊字符"><a href="#正则表达式中的特殊字符" class="headerlink" title="正则表达式中的特殊字符"></a>正则表达式中的特殊字符</h2><table><thead><tr><th align="left">字符</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">\</td><td align="left">1、在非特殊字符之前的反斜杠表示下一个字符是特殊字符，不能按照字面量理解。无论字符出现在哪里，如果前面加了’&#39;，将不再匹配任何字符，而是表示一个字符边界。  2、在特殊字符之前的反斜杠表示下一个字符不是特殊字符，应该按照字面理解。3、在字符串字面量中，反斜杠是反义字符。</td></tr><tr><td align="left">^</td><td align="left">匹配输入的开始，如果多行标志被设置为true，也匹配换行符后紧跟的位置</td></tr><tr><td align="left">$</td><td align="left">匹配输入的结束，如果多行标志被设置为true，也匹配换行符前的位置</td></tr><tr><td align="left">*</td><td align="left">匹配前一个表达式0次或多次，等价于{0，}</td></tr><tr><td align="left">+</td><td align="left">匹配前一个表达式1次或多次，等价于{1，}</td></tr><tr><td align="left">？</td><td align="left">匹配前一个表达式0次或1次，等价于{0，1}，还用于先行断言中，如x(?=y)和x(?!y)</td></tr><tr><td align="left">.</td><td align="left">(小数点)默认匹配除换行符之外的任何单个字符</td></tr><tr><td align="left">(x)</td><td align="left">匹配’x’并记住匹配项，括号被称之为捕获括号</td></tr><tr><td align="left">(?:x)</td><td align="left">匹配’x’但是不记住匹配项。这种括号叫做非捕获括号，是的能够定义与正则表达式运算符一起使用的子表达式。例如：/foo{1,2}/,{1,2}只应用于’foo’的最后一个字符’o’;/(?:foo){1,2}/，{1,2}会应用于整个’foo’单词</td></tr><tr><td align="left">x(?=y)</td><td align="left">匹配’x’仅仅当’x’后跟着’y’，这种叫做先行断言</td></tr><tr><td align="left">(?&lt;=y)x</td><td align="left">匹配’x’仅仅当’x’前面是’y’，这种叫做后行断言</td></tr><tr><td align="left">x(?!y)</td><td align="left">仅仅当’x’后面不跟着’y’时匹配’x’，这被称之为正向否定查找。例如：/\d+(?!.)/.exec(‘3.141’)匹配’141’而不是u’3.141’</td></tr><tr><td align="left">(?&lt;!y)x</td><td align="left">仅仅当’x’前面不是’y’时撇皮’x’，这杯称之为反向否定查找</td></tr><tr><td align="left">x</td><td align="left">y</td></tr><tr><td align="left">{n}</td><td align="left">n是一个正整数，匹配了前面一个字符刚好出现了n次</td></tr><tr><td align="left">{n,}</td><td align="left">n是一个正整数，匹配前一个字符至少出现了n次</td></tr><tr><td align="left">{n,m}</td><td align="left">n和m都是整数，匹配前面的字符至少n次，最多m次。如果n或者m的值是0，这个值被忽略</td></tr><tr><td align="left">[xyz]</td><td align="left">一个字符集合，匹配方括号中的任意字符，包括转义序列。你可以使用破折号(-)来指定一个字符范围，</td></tr><tr><td align="left">[^xyz]</td><td align="left">一个反向字符集，匹配任何没有包含方括号中的字符，</td></tr><tr><td align="left">[^\b]</td><td align="left">匹配一个退格(U+0008)</td></tr><tr><td align="left">\b</td><td align="left">匹配一个词的开始或结束，使用”moon”举例：/\bm/匹配“moon”中的‘m’；/oo\b/并不匹配”moon”中的’oo’，因为’oo’被一个“字”字符’n’紧跟着。/oon\b/匹配”moon”中的’oon’，因为’oon’是这个字符串的结束部分。这样他没有被一个“字”字符紧跟着。/\w\b\w/将不能匹配任何字符串，因为在一个单词中间的字符永远也不可能同时满足没有“字”字符跟随和有“字”字符跟随两种情况。</td></tr><tr><td align="left">\B</td><td align="left">匹配一个非单词边界。1、字符串第一个字符为非’字’字符；2、字符串最后一个字符为非’字’字符；3、两个单词字符之间；4、两个非单词字符之间；5、空字符串</td></tr><tr><td align="left">\cX</td><td align="left">当X是处于A到Z之间的字符的时候，匹配字符串中的一个控制符</td></tr><tr><td align="left">\d</td><td align="left">匹配一个数字，等价于[0-9]</td></tr><tr><td align="left">\D</td><td align="left">匹配一个非数字字符，等价于[^0-9]</td></tr><tr><td align="left">\f</td><td align="left">匹配一个换页符</td></tr><tr><td align="left">\n</td><td align="left">匹配一个换行符</td></tr><tr><td align="left">\r</td><td align="left">匹配一个回车符</td></tr><tr><td align="left">\s</td><td align="left">匹配一个空白字符，包括空格、制表符、换页符和换行符。等价于[ \f\n\r\t\v\u00a0\u1680\u180e\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]</td></tr><tr><td align="left">\S</td><td align="left">匹配一个非空白字符，等价于[^ \f\n\r\t\v\u00a0\u1680\u180e\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]</td></tr><tr><td align="left">\t</td><td align="left">匹配一个水平制表符 (U+0009)。</td></tr><tr><td align="left">\v</td><td align="left">匹配一个垂直制表符 (U+000B)。</td></tr><tr><td align="left">\w</td><td align="left">匹配一个单字字符，(字符、数字或者下划线)。等价于[a-zA-Z0-9_]</td></tr><tr><td align="left">\W</td><td align="left">匹配一个非单词字符，[^a-zA-Z0-9_]</td></tr><tr><td align="left">\n</td><td align="left">在正则表达式中，它返货最后的第n个捕获匹配的子字符串(捕获的数目以左括号计数)</td></tr><tr><td align="left"><a id="more"></a></td><td align="left"></td></tr><tr><td align="left">## 使用插入语</td><td align="left"></td></tr><tr><td align="left">&gt; 任何正则表达式的插入语都会使这部分匹配的副字符串被被记忆，一旦被记忆，这个副字符串就可以被调用于其他用途</td><td align="left"></td></tr><tr><td align="left">- 比如， /Chapter (\d+).\d*/ 解释了额外转义的和特殊的字符，并说明了这部分pattern应该被记忆。它精确地匹配后面跟着一个以上数字字符的字符 ‘Chapter ‘ (\d 意为任何数字字符，+ 意为1次以上)，跟着一个小数点（在这个字符中本身也是一个特殊字符；小数点前的 \ 意味着这个pattern必须寻找字面字符 ‘.’)，跟着任何数字字符0次以上。 (\d 意为数字字符， * 意为0次以上)。另外，插入语也用来记忆第一个匹配的数字字符。</td><td align="left"></td></tr></tbody></table><h2 id="使用括号的子字符串匹配"><a href="#使用括号的子字符串匹配" class="headerlink" title="使用括号的子字符串匹配"></a>使用括号的子字符串匹配</h2><blockquote><p>一个正则表达式模式使用括号，将导致相应的子匹配被记住。例如，/a(b)c/，可以匹配字符串’abc’,并且记得’b’。回调这些括号中匹配的子串，使用数组元素[1]……[n]</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> re = <span class="regexp">/\(\w+)\s(\w+)/</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">'Small Joke'</span>;</span><br><span class="line"><span class="keyword">var</span> newstr = str.replace(re,<span class="string">'$2,$1'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(newstr) <span class="comment">//Joke Small</span></span><br></pre></td></tr></table></figure><h1 id="使用正则表达式"><a href="#使用正则表达式" class="headerlink" title="使用正则表达式"></a>使用正则表达式</h1><blockquote><p>正则表达式可以被用于RegExp的exec和test方法以及String的math、replace、search、split方法。</p></blockquote><table><thead><tr><th align="left">方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">exec</td><td align="left">一个在字符串中执行查找匹配的RegExp方法，它返回一个数组(未匹配到则返回null))</td></tr><tr><td align="left">test</td><td align="left">一个在字符串中测试是否匹配的RegExp方法，它返回true或false。</td></tr><tr><td align="left">match</td><td align="left">一个在字符串中会自行查找匹配的String方法，它返回一个数组，在未匹配到时会返回null；</td></tr><tr><td align="left">matchAll</td><td align="left">一个在字符串中执行查找所有匹配的string，它返回一个迭代器(iterator)</td></tr><tr><td align="left">search</td><td align="left">一个在字符串中测试匹配的的String方法，它返回匹配到的位置索引，或者在失败时返回-1</td></tr><tr><td align="left">replace</td><td align="left">一个在字符串中执行查找匹配的String,并且使用替换字符串替换掉匹配到的子字符串</td></tr><tr><td align="left">split</td><td align="left">一个使用正则表达式或者一个固定字符串分割一个字符串，并将分割后的子字符串存储到数组到数组中的String方法</td></tr></tbody></table><blockquote><p>当想要知道在一个字符串中的一个匹配是否被找到,可以使用test或search方法,想得到更多信息(但是比较慢)则可以使用exec或match方法,如果使用exex或match方法并且匹配成功了,那么这些方法将返回一个数组并且更新相关的正则表达式对象的属性和预定义的正则表达式对象,如果匹配失败,exec方法返回null;</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myRe = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'d(b+)d'</span>,<span class="string">'g'</span>);</span><br><span class="line"><span class="keyword">var</span> myArray = myRe.exec(<span class="string">'cdbbdbsbz'</span>)</span><br></pre></td></tr></table></figure><ul><li>正则表达式执行后的返回信息</li><li><table><thead><tr><th align="left">对象</th><th align="left">属性或索引</th><th align="left">描述</th><th align="left">在例子中对应的值</th></tr></thead><tbody><tr><td align="left">myArray</td><td align="left">无</td><td align="left">匹配到的字符串和所有被记住的子字符串</td><td align="left">[‘dbbd’,’bb’]</td></tr><tr><td align="left">myArray</td><td align="left">index</td><td align="left">在输入的字符串中匹配到以0开始的索引值.</td><td align="left">1</td></tr><tr><td align="left">myArray</td><td align="left">input</td><td align="left">初始字符串</td><td align="left">‘cdbbdbsbz’</td></tr><tr><td align="left">myArray</td><td align="left">[0]</td><td align="left">匹配到的所有字符串(并不是匹配后记住的字符串)</td><td align="left">‘dbbd’</td></tr><tr><td align="left">maRe</td><td align="left">laseIndex</td><td align="left">下一个匹配的索引值.这个属性只有在使用g参数时可用</td><td align="left">5</td></tr><tr><td align="left">maRe</td><td align="left">source</td><td align="left">模式文本,在正则表达式创建时更新,不执行</td><td align="left">‘d(b+)d’</td></tr></tbody></table></li></ul><h2 id="通过标志进行高级搜索"><a href="#通过标志进行高级搜索" class="headerlink" title="通过标志进行高级搜索"></a>通过标志进行高级搜索</h2><blockquote><p>正则表达式有四个可选参数进行全局和不分大小写搜索,这些参数既可以单独使用也可以一起使用在任何顺序和半酣正则表达式的部分中</p></blockquote><table><thead><tr><th align="left">标志</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">g</td><td align="left">全局搜索</td></tr><tr><td align="left">i</td><td align="left">不区分大小写搜索</td></tr><tr><td align="left">m</td><td align="left">多行搜索</td></tr><tr><td align="left">s</td><td align="left">允许.匹配换行符</td></tr><tr><td align="left">u</td><td align="left">使用unicode码的模式进行匹配</td></tr><tr><td align="left">y</td><td align="left">执行’粘性’搜索,匹配从目标字符串的当前位置开始,可以使用y标志</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink&quot; title=&quot;正则表达式&quot;&gt;&lt;/a&gt;正则表达式&lt;/h1&gt;&lt;h2 id=&quot;正则表达式中的特殊字符&quot;&gt;&lt;a href=&quot;#正则表达式中的特殊字符&quot; class=&quot;headerlink&quot; title=&quot;正则表达式中的特殊字符&quot;&gt;&lt;/a&gt;正则表达式中的特殊字符&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;字符&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;含义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;1、在非特殊字符之前的反斜杠表示下一个字符是特殊字符，不能按照字面量理解。无论字符出现在哪里，如果前面加了’&amp;#39;，将不再匹配任何字符，而是表示一个字符边界。  2、在特殊字符之前的反斜杠表示下一个字符不是特殊字符，应该按照字面理解。3、在字符串字面量中，反斜杠是反义字符。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;^&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配输入的开始，如果多行标志被设置为true，也匹配换行符后紧跟的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;$&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配输入的结束，如果多行标志被设置为true，也匹配换行符前的位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;*&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配前一个表达式0次或多次，等价于{0，}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;+&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配前一个表达式1次或多次，等价于{1，}&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;？&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配前一个表达式0次或1次，等价于{0，1}，还用于先行断言中，如x(?=y)和x(?!y)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;.&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;(小数点)默认匹配除换行符之外的任何单个字符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;(x)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配’x’并记住匹配项，括号被称之为捕获括号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;(?:x)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配’x’但是不记住匹配项。这种括号叫做非捕获括号，是的能够定义与正则表达式运算符一起使用的子表达式。例如：/foo{1,2}/,{1,2}只应用于’foo’的最后一个字符’o’;/(?:foo){1,2}/，{1,2}会应用于整个’foo’单词&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;x(?=y)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配’x’仅仅当’x’后跟着’y’，这种叫做先行断言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;(?&amp;lt;=y)x&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配’x’仅仅当’x’前面是’y’，这种叫做后行断言&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;x(?!y)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;仅仅当’x’后面不跟着’y’时匹配’x’，这被称之为正向否定查找。例如：/\d+(?!.)/.exec(‘3.141’)匹配’141’而不是u’3.141’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;(?&amp;lt;!y)x&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;仅仅当’x’前面不是’y’时撇皮’x’，这杯称之为反向否定查找&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;x&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;y&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;{n}&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;n是一个正整数，匹配了前面一个字符刚好出现了n次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;{n,}&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;n是一个正整数，匹配前一个字符至少出现了n次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;{n,m}&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;n和m都是整数，匹配前面的字符至少n次，最多m次。如果n或者m的值是0，这个值被忽略&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;[xyz]&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;一个字符集合，匹配方括号中的任意字符，包括转义序列。你可以使用破折号(-)来指定一个字符范围，&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;[^xyz]&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;一个反向字符集，匹配任何没有包含方括号中的字符，&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;[^\b]&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配一个退格(U+0008)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\b&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配一个词的开始或结束，使用”moon”举例：/\bm/匹配“moon”中的‘m’；/oo\b/并不匹配”moon”中的’oo’，因为’oo’被一个“字”字符’n’紧跟着。/oon\b/匹配”moon”中的’oon’，因为’oon’是这个字符串的结束部分。这样他没有被一个“字”字符紧跟着。/\w\b\w/将不能匹配任何字符串，因为在一个单词中间的字符永远也不可能同时满足没有“字”字符跟随和有“字”字符跟随两种情况。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\B&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配一个非单词边界。1、字符串第一个字符为非’字’字符；2、字符串最后一个字符为非’字’字符；3、两个单词字符之间；4、两个非单词字符之间；5、空字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\cX&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;当X是处于A到Z之间的字符的时候，匹配字符串中的一个控制符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\d&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配一个数字，等价于[0-9]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\D&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配一个非数字字符，等价于[^0-9]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\f&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配一个换页符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\n&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配一个换行符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\r&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配一个回车符&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\s&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配一个空白字符，包括空格、制表符、换页符和换行符。等价于[ \f\n\r\t\v\u00a0\u1680\u180e\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\S&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配一个非空白字符，等价于[^ \f\n\r\t\v\u00a0\u1680\u180e\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\t&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配一个水平制表符 (U+0009)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\v&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配一个垂直制表符 (U+000B)。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\w&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配一个单字字符，(字符、数字或者下划线)。等价于[a-zA-Z0-9_]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\W&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;匹配一个非单词字符，[^a-zA-Z0-9_]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;\n&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;在正则表达式中，它返货最后的第n个捕获匹配的子字符串(捕获的数目以左括号计数)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>事件</title>
    <link href="http://yoursite.com/2019/09/03/%E4%BA%8B%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/09/03/事件/</id>
    <published>2019-09-03T07:36:39.000Z</published>
    <updated>2019-09-03T08:29:27.128Z</updated>
    
    <content type="html"><![CDATA[<h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><h2 id="事件流"><a href="#事件流" class="headerlink" title="事件流"></a>事件流</h2><p>1、事件捕获：事件发生后，由外向内传递<br>2、事件冒泡：事件发生后，由内向外传递<br>3、DOM事件流：先从外向内，再从内向外</p><p>例：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">        &lt;button&gt;点我&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>p&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure><p>当button被点击时，事件流：<br>捕获阶段：window -&gt; document -&gt; hetl -&gt; body -&gt; div -&gt; p -&gt; button<br>冒泡阶段：button -&gt; p -&gt; div -&gt; body -&gt; html -&gt; document -&gt; window</p><blockquote><p>当事件发生时候，默认情况下，事件流是一定存在的。例如，当前页面没有点击事件，但是这是点击的button，上面的事件流是存在的。只是事件传递到某个元素时，我们并没有去处理这个事件</p></blockquote><a id="more"></a><h3 id="DOM0事件流"><a href="#DOM0事件流" class="headerlink" title="DOM0事件流"></a>DOM0事件流</h3><ul><li><p>特点：</p><ul><li>1、只能处理冒泡阶段</li><li>2、函数内的this，就是on前面的元素</li><li>3、事件名称所有字母都小写</li><li>4、兼容性好</li></ul></li><li><p>解除DOM0事件处理</p><ul><li>null</li></ul></li></ul><h3 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'div'</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params">evt</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>evt就是事件对象，事件对象中，装着事件关联的信息</p><ul><li>事件发生时，我们需要得到事件相关的信息</li><li>世界按信息通常都放在了事件对象中</li><li>事件处理函数的参数，就是事件对象</li></ul></li><li><p>鼠标位置：</p><ul><li><p>clientX / clientY：</p><ul><li>client直译为客户端，客户端的窗口是指浏览器的显示页面内容的窗口大小(不包含工具栏、导航栏等等)。</li><li>兼容性：IE和主流浏览器都支持</li></ul></li><li><p>offsetX / offsetY：</p><ul><li>offest意为偏移量，是被点击的元素距左上角为参考原点的长度。</li><li>而IE、Chrome的参考点有所差异。<ul><li>Chrome下，offsetX / offsetY都是包含边框的</li><li>IE下，不包含边框，如果鼠标进入border区域，为返回负值。</li><li>兼容性：IE9+、Chrome都支持</li></ul></li></ul></li><li><p>screenX / screenY</p><ul><li>screen顾名思义是屏幕，是用来获取鼠标点击位置到屏幕显示器的距离，距离的最大值需根据屏幕分辨路的尺寸来计算</li><li>兼容性：所有浏览器都支持</li></ul></li><li><p>pageX / pageY</p><ul><li>page为页面的意思，页面的高度一般情况client浏览器显示区域装不下，所以会出现垂直滚动条</li><li>鼠标距离页面初始page原点的长度</li><li>兼容性：IE不支持，其他高级浏览器支持</li></ul></li></ul></li></ul><h2 id="事件行为"><a href="#事件行为" class="headerlink" title="事件行为"></a>事件行为</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"outer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>1、evt.type</p><ul><li>事件类型<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">outer.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">evt</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(evt.type)</span><br><span class="line">    <span class="comment">//  在这里，类型为click</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>2、evt.target</p><ul><li>目标元素，真正触发事件的元素</li><li><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">outer.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">evt</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(evt.target.className)</span><br><span class="line">    <span class="comment">//   输出为outer</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>3、evt.stopPropagation()</p><ul><li>停止事件的传递(截断事件流)<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">inner.onclick = <span class="function"><span class="keyword">function</span> (<span class="params">evt</span>) </span>&#123;</span><br><span class="line">    evt.stopPropagation()  </span><br><span class="line">    <span class="comment">//  停止事件的传(截断事件流)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>4、evt.preventDefault()</p><ul><li>阻止事件的默认行为，事件的默认行为是指浏览器对某些事件的默认处理<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'a'</span>).onclick = <span class="function"><span class="keyword">function</span>(<span class="params">evt</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(count === <span class="number">0</span>) &#123;</span><br><span class="line">        evt.preventDefault()    </span><br><span class="line">        <span class="comment">//  阻止了a的默认行为</span></span><br><span class="line">        <span class="comment">//  只阻止当前一次的默认行为</span></span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h2><table><thead><tr><th align="left">属性</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">onclick</td><td align="left">当用户点击某个对象时调用的事件句柄</td></tr><tr><td align="left">oncontextmenu</td><td align="left">在用户点击鼠标右键打开上下文菜单时触发</td></tr><tr><td align="left">ondblclick</td><td align="left">当用户双击某个对象时调用的事件句柄</td></tr><tr><td align="left">onmousedown</td><td align="left">鼠标按钮被按下</td></tr><tr><td align="left">onmouseenter</td><td align="left">当鼠标指针移动到元素上时触发</td></tr><tr><td align="left">onmouseleave</td><td align="left">当鼠标指针移出元素时触发</td></tr><tr><td align="left">onmousemove</td><td align="left">鼠标被移动。</td></tr><tr><td align="left">onmouseover</td><td align="left">鼠标移到某元素之上</td></tr><tr><td align="left">onmouseout</td><td align="left">鼠标从某元素移开</td></tr><tr><td align="left">onmouseup</td><td align="left">鼠标按键被松开</td></tr></tbody></table><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><table><thead><tr><th align="left">属性</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">onkeydown</td><td align="left">某个键盘按键被按下。</td></tr><tr><td align="left">onkeypress</td><td align="left">某个键盘按键被按下并松开。</td></tr><tr><td align="left">onkeyup</td><td align="left">某个键盘按键被松开。</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;事件&quot;&gt;&lt;a href=&quot;#事件&quot; class=&quot;headerlink&quot; title=&quot;事件&quot;&gt;&lt;/a&gt;事件&lt;/h1&gt;&lt;h2 id=&quot;事件流&quot;&gt;&lt;a href=&quot;#事件流&quot; class=&quot;headerlink&quot; title=&quot;事件流&quot;&gt;&lt;/a&gt;事件流&lt;/h2&gt;&lt;p&gt;1、事件捕获：事件发生后，由外向内传递&lt;br&gt;2、事件冒泡：事件发生后，由内向外传递&lt;br&gt;3、DOM事件流：先从外向内，再从内向外&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;button&amp;gt;点我&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/button&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;regexp&quot;&gt;    &amp;lt;/&lt;/span&gt;p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;regexp&quot;&gt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;当button被点击时，事件流：&lt;br&gt;捕获阶段：window -&amp;gt; document -&amp;gt; hetl -&amp;gt; body -&amp;gt; div -&amp;gt; p -&amp;gt; button&lt;br&gt;冒泡阶段：button -&amp;gt; p -&amp;gt; div -&amp;gt; body -&amp;gt; html -&amp;gt; document -&amp;gt; window&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当事件发生时候，默认情况下，事件流是一定存在的。例如，当前页面没有点击事件，但是这是点击的button，上面的事件流是存在的。只是事件传递到某个元素时，我们并没有去处理这个事件&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>练习</title>
    <link href="http://yoursite.com/2019/09/03/%E7%BB%83%E4%B9%A0/"/>
    <id>http://yoursite.com/2019/09/03/练习/</id>
    <published>2019-09-03T04:37:26.000Z</published>
    <updated>2019-09-03T07:35:56.026Z</updated>
    
    <content type="html"><![CDATA[<h2 id="点击按钮添加-删除表格"><a href="#点击按钮添加-删除表格" class="headerlink" title="点击按钮添加/删除表格"></a>点击按钮添加/删除表格</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        td &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">'1'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>年龄<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"排序"</span> <span class="attr">style</span>=<span class="string">"margin-left:10px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>籍贯<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"area"</span> <span class="attr">value</span>=<span class="string">"排序"</span> <span class="attr">style</span>=<span class="string">"margin-left:10px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>张三丰<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>109<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>山东济南<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>李四疯<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>25<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>河南洛阳<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>晓明<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>33<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>翠花<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>18<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>辽宁沈阳<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//  监听age点击事件</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">'#age'</span>).addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//  因为要给tr排序，所以取到所有tr</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> trs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'tbody tr'</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">//  因为要排序，需要使用sort方法，所以将trs伪数组转为真数组</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> arr = <span class="built_in">Array</span>.from(trs)</span></span><br><span class="line"><span class="javascript">            <span class="comment">//  使用sort方法，根据tr内的td来为tr排序</span></span></span><br><span class="line"><span class="javascript">            arr.sort(<span class="function"><span class="keyword">function</span> (<span class="params">tr1, tr2</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//  取到对应tr的第三个td的值</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> age1 = tr1.children[<span class="number">2</span>].innerHTML</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> age2 = tr2.children[<span class="number">2</span>].innerHTML</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                <span class="comment">//  进行判断</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> age1 - age2</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                <span class="comment">//  遍历arr</span></span></span><br><span class="line"></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            arr.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">tr</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//  更新DOM树,将排序完成tr重新放入DOM树上</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.querySelector(<span class="string">'tbody'</span>).appendChild(tr)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">        &#125;, <span class="literal">false</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//  监听area点击事件</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">'#area'</span>).addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> trs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'tbody tr'</span>)</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> arr = <span class="built_in">Array</span>.from(trs)</span></span><br><span class="line"><span class="javascript">            arr.sort(<span class="function"><span class="keyword">function</span>(<span class="params">tr1,tr2</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> city1 = tr1.children[<span class="number">3</span>].innerHTML</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> city2 = tr2.children[<span class="number">3</span>].innerHTML</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> city1.localeCompare(city2)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">            arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">tr</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.querySelector(<span class="string">'tbody'</span>).appendChild(tr)</span></span><br><span class="line">            &#125;)</span><br><span class="line"><span class="javascript">        &#125;, <span class="literal">false</span>)</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://s2.ax1x.com/2019/09/03/nFoJ0J.jpg"><a id="more"></a>## 点击按钮移动两个ul中选定内容<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"G:\千锋\Second\jquery-3.4.1.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul,</span><br><span class="line">        li &#123;</span><br><span class="line">            list-style: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .left,</span><br><span class="line">        .right,</span><br><span class="line">        .btn-group &#123;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .left &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            background: #3dc;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .right &#123;</span><br><span class="line">            width: 200px;</span><br><span class="line">            height: 400px;</span><br><span class="line">            background: #fd2;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .left,</span><br><span class="line">        .right &#123;</span><br><span class="line">            text-align: center;</span><br><span class="line">            font-size: 24px;</span><br><span class="line">            line-height: 36px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .btn-group &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .btn-group p button &#123;</span><br><span class="line"></span><br><span class="line">            font-size: 36px;</span><br><span class="line">            margin-top: 36px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .focus &#123;</span><br><span class="line">            background: #fcf;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        li &#123;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">            margin-top: 5px;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>笑溟沧海千钧破<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>策定乾坤算因果<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>无觉无惧轻生死<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>非神非鬼似疯魔<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"btn-group"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"go-2right"</span>&gt;</span>&amp;gt;<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"go-2left"</span>&gt;</span>&amp;lt;<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//  1、监听点击事件</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//  2、增加样式</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//  因为要移动li，所以取到所有的li</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> lis = <span class="built_in">document</span>.querySelectorAll(<span class="string">'li'</span>)</span></span><br><span class="line"><span class="javascript">        <span class="comment">//  循环遍历取到所有li的值</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; lis.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//  绑定li点击事件</span></span></span><br><span class="line"><span class="javascript">            lis[i].addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//  判断是否为焦点，点击增加样式，</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//  this指向被点击的li</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//  **切记判断使用' === '</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="keyword">this</span>.className === <span class="string">'focus'</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.className = <span class="string">''</span></span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">                <span class="comment">// 再次点击取消</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.className = <span class="string">'focus'</span></span></span><br><span class="line">                &#125;</span><br><span class="line"><span class="javascript">            &#125;, <span class="literal">false</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="comment">//  3、移动有相同样式的li</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">//  监听button 的点击事件</span></span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">'#go-2right'</span>).addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//  取到所有带相同样式的li</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> focus = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.left .focus'</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">//  循环遍历</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; focus.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//  在右侧ul中新增focus内的所有子节点</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.querySelector(<span class="string">'.right'</span>).appendChild(focus[i])</span></span><br><span class="line"><span class="javascript">                <span class="comment">//  取消焦点</span></span></span><br><span class="line"><span class="javascript">                focus[i].className = <span class="string">''</span></span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">        &#125;, <span class="literal">false</span>)</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.querySelector(<span class="string">'#go-2left'</span>).addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//  取到所有带相同样式的li</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> focus = <span class="built_in">document</span>.querySelectorAll(<span class="string">'.right .focus'</span>)</span></span><br><span class="line"><span class="javascript">            <span class="comment">//  循环遍历</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; focus.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//  在右侧ul中新增focus内的所有子节点</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.querySelector(<span class="string">'.left'</span>).appendChild(focus[i])</span></span><br><span class="line"><span class="javascript">                <span class="comment">//  取消焦点</span></span></span><br><span class="line"><span class="javascript">                focus[i].className = <span class="string">''</span></span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="javascript">        &#125;, <span class="literal">false</span>)</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://s2.ax1x.com/2019/09/03/nFoj3V.jpg">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;点击按钮添加-删除表格&quot;&gt;&lt;a href=&quot;#点击按钮添加-删除表格&quot; class=&quot;headerlink&quot; title=&quot;点击按钮添加/删除表格&quot;&gt;&lt;/a&gt;点击按钮添加/删除表格&lt;/h2&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ie=edge&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        td &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            width: 100px;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;style&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;border&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;thead&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;ID&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;姓名&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;年龄&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;age&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;排序&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;margin-left:10px;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;籍贯&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;button&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;area&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;value&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;排序&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;style&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;margin-left:10px;&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;thead&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tbody&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;张三丰&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;109&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;山东济南&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;李四疯&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;25&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;河南洛阳&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;3&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;晓明&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;33&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;上海&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;4&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;翠花&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;18&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;辽宁沈阳&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;td&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tr&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;tbody&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;table&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//  监听age点击事件&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#age&#39;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//  因为要给tr排序，所以取到所有tr&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; trs = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelectorAll(&lt;span class=&quot;string&quot;&gt;&#39;tbody tr&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//  因为要排序，需要使用sort方法，所以将trs伪数组转为真数组&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.from(trs)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;//  使用sort方法，根据tr内的td来为tr排序&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            arr.sort(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;tr1, tr2&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//  取到对应tr的第三个td的值&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; age1 = tr1.children[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;].innerHTML&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; age2 = tr2.children[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;].innerHTML&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//  进行判断&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; age1 - age2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//  遍历arr&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            arr.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;tr&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                &lt;span class=&quot;comment&quot;&gt;//  更新DOM树,将排序完成tr重新放入DOM树上&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;tbody&#39;&lt;/span&gt;).appendChild(tr)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        &amp;#125;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//  监听area点击事件&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;#area&#39;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&#39;click&#39;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; trs = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelectorAll(&lt;span class=&quot;string&quot;&gt;&#39;tbody tr&#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr = &lt;span class=&quot;built_in&quot;&gt;Array&lt;/span&gt;.from(trs)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            arr.sort(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;tr1,tr2&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; city1 = tr1.children[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;].innerHTML&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; city2 = tr2.children[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;].innerHTML&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; city1.localeCompare(city2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;            arr.forEach(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;tr&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.querySelector(&lt;span class=&quot;string&quot;&gt;&#39;tbody&#39;&lt;/span&gt;).appendChild(tr)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;javascript&quot;&gt;        &amp;#125;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;img src=&quot;https://s2.ax1x.com/2019/09/03/nFoJ0J.jpg&quot;&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>点击表格切换图片-js写法</title>
    <link href="http://yoursite.com/2019/08/30/%E7%82%B9%E5%87%BB%E8%A1%A8%E6%A0%BC%E5%88%87%E6%8D%A2%E5%9B%BE%E7%89%87-js%E5%86%99%E6%B3%95/"/>
    <id>http://yoursite.com/2019/08/30/点击表格切换图片-js写法/</id>
    <published>2019-08-30T03:45:39.000Z</published>
    <updated>2019-08-30T05:16:35.266Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        td &#123;</span><br><span class="line">            width: 50px;</span><br><span class="line">            height: 50px;</span><br><span class="line">            background: #fcf;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        img &#123;</span><br><span class="line">            margin-top: 50px;</span><br><span class="line">            width: 1000px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .focus &#123;</span><br><span class="line">            background: #dfc;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"focus"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"G:/千锋/Second/00_src/08_dom/img/1.jpg"</span> <span class="attr">alt</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//取到所有td</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> tds = <span class="built_in">document</span>.querySelectorAll(<span class="string">'td'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="comment">//循环遍历所有td</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; tds.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//记录i值</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> td = tds[i];</span></span><br><span class="line"><span class="javascript">            <span class="comment">//循环的过程中，i值是正确的，在循环中将其保存在td上</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//为td新加属性值</span></span></span><br><span class="line"><span class="javascript">            td.setAttribute(<span class="string">'joker'</span>, <span class="string">'G:/千锋/Second/00_src/08_dom/img/'</span> + (i + <span class="number">1</span>) + <span class="string">'.jpg'</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="comment">//td点击事件</span></span></span><br><span class="line"><span class="javascript">            td.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//循环中有事件绑定，事件绑定中使用了i值，此时的i值是错误的</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//取到img</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> img = <span class="built_in">document</span>.querySelector(<span class="string">'img'</span>);</span></span><br><span class="line"><span class="javascript">                <span class="comment">//取到为td新增的属性值</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> src = <span class="keyword">this</span>.getAttribute(<span class="string">'joker'</span>);</span></span><br><span class="line"><span class="javascript">                <span class="comment">//将设置的属性值赋值给img的src属性</span></span></span><br><span class="line"><span class="javascript">                img.setAttribute(<span class="string">'src'</span>, src);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">                <span class="comment">//清除焦点</span></span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.querySelector(<span class="string">'.focus'</span>).className = <span class="string">''</span>;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//设置新焦点</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.className = <span class="string">'focus'</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="javascript">        <span class="comment">// td.removeAttribute('joker');</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>跨浏览器</title>
    <link href="http://yoursite.com/2019/08/29/%E5%85%BC%E5%AE%B9%E6%80%A7/"/>
    <id>http://yoursite.com/2019/08/29/兼容性/</id>
    <published>2019-08-29T11:16:14.000Z</published>
    <updated>2019-08-29T11:29:30.181Z</updated>
    
    <content type="html"><![CDATA[<h3 id="跨浏览器取得窗口左边和上边的位置"><a href="#跨浏览器取得窗口左边和上边的位置" class="headerlink" title="跨浏览器取得窗口左边和上边的位置"></a>跨浏览器取得窗口左边和上边的位置</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> leftPos = (<span class="built_in">window</span>.screenLeft !== <span class="literal">undefined</span>) ? <span class="built_in">window</span>.screenLeft : <span class="built_in">window</span>.screenX;</span><br><span class="line"><span class="keyword">var</span> topPos = (<span class="built_in">window</span>.screenTop !== <span class="literal">undefined</span>) ? <span class="built_in">window</span>.screenTop : <span class="built_in">window</span>.screenY;</span><br></pre></td></tr></table></figure><h3 id="跨浏览器取得滚轮滚动距离"><a href="#跨浏览器取得滚轮滚动距离" class="headerlink" title="跨浏览器取得滚轮滚动距离"></a>跨浏览器取得滚轮滚动距离</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> scrollTop = <span class="built_in">document</span>.documentElement.scrollTop ? <span class="built_in">document</span>.documentElement.scrollTop : <span class="built_in">document</span>.body.scrollTop;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;跨浏览器取得窗口左边和上边的位置&quot;&gt;&lt;a href=&quot;#跨浏览器取得窗口左边和上边的位置&quot; class=&quot;headerlink&quot; title=&quot;跨浏览器取得窗口左边和上边的位置&quot;&gt;&lt;/a&gt;跨浏览器取得窗口左边和上边的位置&lt;/h3&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>BOM</title>
    <link href="http://yoursite.com/2019/08/28/BOM/"/>
    <id>http://yoursite.com/2019/08/28/BOM/</id>
    <published>2019-08-28T05:21:14.000Z</published>
    <updated>2019-08-30T00:43:09.527Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BOM"><a href="#BOM" class="headerlink" title="BOM"></a>BOM</h1><blockquote><p>定义：浏览器对象模型，通过这个BOM对象，可以访问浏览器相关内容；<br>BOM的核心对象是：window；</p></blockquote><ul><li>window有两个职责：<ul><li>1、代表着一个窗口</li><li>2、全局对象(所有全局变量，都可以通过这个对象访问到)；所有全局变量/全局函数，都会作为window的属性/方法存在</li></ul></li></ul><h2 id="setTimeout"><a href="#setTimeout" class="headerlink" title="setTimeout()"></a>setTimeout()</h2><blockquote><p>定义:在一段时间之后，做一件事情(只做一次)  </p></blockquote><a id="more"></a><p>语法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//setTimeout(要做的事情，时间(单位毫秒))</span></span><br><span class="line"><span class="keyword">var</span> id1= setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;,<span class="number">5000</span>)<span class="comment">//五秒钟之后要做的事情</span></span><br></pre></td></tr></table></figure><blockquote><p>返回值：这次延时函数的标识<br>clearTimeout(id1)  //取消setTimeout</p></blockquote><h2 id="setInterval"><a href="#setInterval" class="headerlink" title="setInterval()"></a>setInterval()</h2><blockquote><p>定义：每间隔一段时间，做一件事情  </p></blockquote><p>语法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//setInterval(要做的事，间隔时间(毫秒))</span></span><br><span class="line"><span class="keyword">var</span> id2 = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;,<span class="number">500</span>)</span><br></pre></td></tr></table></figure><blockquote><p>clearInterval(id2)  //取消setInterval<br>问题：当间隔时间，小于了做事情的时间，就会导致事件的堆积，耗费系统资源</p></blockquote><p>使用setTimeout来模拟setInterval</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cutCong</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">       count1++;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">'切葱2分钟.第'</span> + count1 + <span class="string">'根儿'</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (count1 === <span class="number">10</span>) &#123;</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           cutCong()</span><br><span class="line">       &#125;, <span class="number">3000</span>)</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h1 id="locatin"><a href="#locatin" class="headerlink" title="locatin"></a>locatin</h1><blockquote><p>表示页面的地址  </p></blockquote><ul><li><p><a href="http://www.w3.org/TR/html5/browsers.html?user=aaa&amp;password=bbb#the-window-object" target="_blank" rel="noopener">http://www.w3.org/TR/html5/browsers.html?user=aaa&amp;password=bbb#the-window-object</a></p></li><li><p>1、协议(protocal)：http/https</p></li><li><p>2、主机(host)：<a href="http://www.w3.org" target="_blank" rel="noopener">www.w3.org</a></p></li><li><p>3、端口(port)：80/443</p></li><li><p>4、路径(path)：/TR/html5/browsers.html</p></li><li><p>5、查询(search)：?后面的内容</p></li><li><p>6、哈希(hash)：#后面的内容</p></li><li><p>location.href ：<a href="http://www.w3.org:80/TR/html5/browsers.html?user=aaa&amp;password=bbb#the-window-object" target="_blank" rel="noopener">http://www.w3.org:80/TR/html5/browsers.html?user=aaa&amp;password=bbb#the-window-object</a></p></li><li><p>location.protocol</p></li><li><p>location.hostname</p></li><li><p>location.port</p></li><li><p>location.pathname</p></li><li><p>location.search</p></li><li><p>location.hash</p></li></ul><h3 id="navigator"><a href="#navigator" class="headerlink" title="navigator"></a>navigator</h3><ul><li>userAgent<blockquote><p>a字符串，内部包含了浏览器的信息，浏览器名称、版本、运行的平台<br>每次浏览器发出请求，都会给服务器发送该信息。</p></blockquote></li></ul><h3 id="宽高"><a href="#宽高" class="headerlink" title="宽高"></a>宽高</h3><ul><li>window.innerWidth</li><li>window.innerHeight</li><li>window.outWidth</li><li>window.outHeight</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;BOM&quot;&gt;&lt;a href=&quot;#BOM&quot; class=&quot;headerlink&quot; title=&quot;BOM&quot;&gt;&lt;/a&gt;BOM&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;定义：浏览器对象模型，通过这个BOM对象，可以访问浏览器相关内容；&lt;br&gt;BOM的核心对象是：window；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;window有两个职责：&lt;ul&gt;
&lt;li&gt;1、代表着一个窗口&lt;/li&gt;
&lt;li&gt;2、全局对象(所有全局变量，都可以通过这个对象访问到)；所有全局变量/全局函数，都会作为window的属性/方法存在&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;setTimeout&quot;&gt;&lt;a href=&quot;#setTimeout&quot; class=&quot;headerlink&quot; title=&quot;setTimeout()&quot;&gt;&lt;/a&gt;setTimeout()&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;定义:在一段时间之后，做一件事情(只做一次)  &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>排序算法</title>
    <link href="http://yoursite.com/2019/08/28/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2019/08/28/排序算法/</id>
    <published>2019-08-28T02:28:57.000Z</published>
    <updated>2019-08-29T11:36:54.181Z</updated>
    
    <content type="html"><![CDATA[<p><strong>排序的定义：对一系列对象根据某个关键字进行排序</strong></p><h1 id="冒泡排序-Bubble-Sort"><a href="#冒泡排序-Bubble-Sort" class="headerlink" title="冒泡排序(Bubble Sort)"></a>冒泡排序(Bubble Sort)</h1><h2 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述:"></a>算法描述:</h2><ul><li>1、比较相邻的元素。如果第一个比第二个大，就交换它们两个；</li><li>2、对每一对相邻的元素做相同的工作，从开始第一队到最后一对，这样在最后的元素应该是最大的数；</li><li>3、针对所有的元素重复以上步骤，除了最后一个</li><li>4、重复步骤1~3，直到排序完成；</li></ul><a id="more"></a><h2 id="JavaScript代码实现"><a href="#JavaScript代码实现" class="headerlink" title="JavaScript代码实现"></a>JavaScript代码实现</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubbleSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> len = arr.length;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; len - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">              <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                  <span class="keyword">var</span> temp = arr[j + <span class="number">1</span>]</span><br><span class="line">                  arr[j + <span class="number">1</span>] = arr[j]</span><br><span class="line">                  arr[j] = temp</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> arr;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> arr = [<span class="number">3</span>, <span class="number">44</span>, <span class="number">38</span>, <span class="number">5</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">36</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">2</span>, <span class="number">46</span>, <span class="number">4</span>, <span class="number">19</span>, <span class="number">50</span>, <span class="number">48</span>];</span><br><span class="line">  <span class="built_in">console</span>.log(bubbleSort(arr));<span class="comment">//[2, 3, 4, 5, 15, 19, 26, 27, 36, 38, 44, 46, 47, 48, 50]</span></span><br></pre></td></tr></table></figure><h2 id="改进算法"><a href="#改进算法" class="headerlink" title="改进算法"></a>改进算法</h2><p>设置一标志性变量pos，用于记录每趟程序中最后一次进行交换的位置。由于pose位置之后的记录均已交换到位置，故在进行下一趟排序时只要扫描到pos位置即可。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubbleSort2</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = arr.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> pos = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; i; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j] &gt; arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">                pos = j;</span><br><span class="line">                <span class="keyword">var</span> tmp = arr[j];arr[j] = arr[j+<span class="number">1</span>];arr[j+<span class="number">1</span>] = tmp</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        i = pos</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">3</span>, <span class="number">44</span>, <span class="number">38</span>, <span class="number">5</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">36</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">2</span>, <span class="number">46</span>, <span class="number">4</span>, <span class="number">19</span>, <span class="number">50</span>, <span class="number">48</span>];</span><br><span class="line"><span class="built_in">console</span>.log(bubbleSort2(arr));<span class="comment">//[2, 3, 4, 5, 15, 19, 26, 27, 36, 38, 44, 46, 47, 48, 50]</span></span><br></pre></td></tr></table></figure><h1 id="选择排序-Selection-Sort"><a href="#选择排序-Selection-Sort" class="headerlink" title="选择排序 (Selection Sort)"></a>选择排序 (Selection Sort)</h1><h2 id="算法简介"><a href="#算法简介" class="headerlink" title="算法简介"></a>算法简介</h2><p>选择排序(Selection Sort)是一种简单直观的排序算法，它的工作原理，首先在未排序序列中找到最小(大)元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中集训寻找最小(大)元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。</p><h2 id="算法描述-1"><a href="#算法描述-1" class="headerlink" title="算法描述"></a>算法描述</h2><blockquote><p>n个记录的之间选择排序可经过n-1唐直接选择排序得到有序结果。具体算法如下：</p></blockquote><ul><li>1、初始状态，无序区为R[1…n]，有序区为空</li><li>2、第i趟排序(i = 1,2,3…n-1)开始时，当前有序区和无序区分别为R[1…i-1]和R(i…n).该趟排序从当前无序区中，选出关键字最小的记录R[k]，将它与无序区的第1个记录R交换，使R[1…i]和R[i+1…n]分别变为记录个数增加1个的新有序区和记录个数减少1个的新无序区。</li><li>3、n-1趟结束，数组有序化</li></ul><h2 id="JavaScript代码实现-1"><a href="#JavaScript代码实现-1" class="headerlink" title="JavaScript代码实现"></a>JavaScript代码实现</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">selectionSort</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> len = arr.length;</span><br><span class="line">    <span class="keyword">var</span> minIndex,temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++)&#123;</span><br><span class="line">        minIndex = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> j = i + <span class="number">1</span>; j &lt; len; j++)&#123;    </span><br><span class="line">            <span class="keyword">if</span>(arr[j] &lt; arr[minIndex])&#123;  <span class="comment">//寻找最小的数</span></span><br><span class="line">                minIndex = j  <span class="comment">//将最小数的索引保存</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        temp = arr[i];</span><br><span class="line">        arr[i] = arr[minIndex];</span><br><span class="line">        arr[minIndex] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">3</span>, <span class="number">44</span>, <span class="number">38</span>, <span class="number">5</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">36</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">2</span>, <span class="number">46</span>, <span class="number">4</span>, <span class="number">19</span>, <span class="number">50</span>, <span class="number">48</span>];</span><br><span class="line"><span class="built_in">console</span>.log(selectionSort(arr));<span class="comment">//[2, 3, 4, 5, 15, 19, 26, 27, 36, 38, 44, 46, 47, 48, 50]</span></span><br></pre></td></tr></table></figure><h1 id="插入排序-Insertion-Sort"><a href="#插入排序-Insertion-Sort" class="headerlink" title="插入排序(Insertion Sort)"></a>插入排序(Insertion Sort)</h1><h2 id="算法简介-1"><a href="#算法简介-1" class="headerlink" title="算法简介"></a>算法简介</h2><p>插入排序(Insertion Sort)的算法是描述一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。插入排序在实现上，通常采用in-place排序(即只需要用到0(1)的额外空间的排序)，因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。</p><h2 id="算法描述-2"><a href="#算法描述-2" class="headerlink" title="算法描述"></a>算法描述</h2><blockquote><p>一般来说，插入排序都采用in-place在数组上实现。</p></blockquote><ul><li>1、从第一个元素开始，该元素可以认为已经被排序；</li><li>2、取出下一个元素，在已排序的元素序列中从后向前扫描；</li><li>3、如果该元素(已排序)大于新元素，将该元素移到下一位置；</li><li>4、重复步骤3，直到找到已排序的元素小于或者等于新元素的位置；</li><li>5、将新元素插入该位置后；</li><li>6、重复步骤2~5；</li></ul><h2 id="Javascript代码实现"><a href="#Javascript代码实现" class="headerlink" title="Javascript代码实现"></a>Javascript代码实现</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertionSort</span>(<span class="params">arr</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">1</span>;i &lt; arr.length; i++)&#123;</span><br><span class="line">        <span class="keyword">var</span> temp = arr[i];</span><br><span class="line">        <span class="keyword">var</span> j = i - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(;j &gt; <span class="number">0</span> &amp;&amp; arr[j] &gt; temp;j--)&#123;</span><br><span class="line">            arr[j + <span class="number">1</span>] = arr[j]</span><br><span class="line">        &#125;</span><br><span class="line">        arr[j + <span class="number">1</span>] = temp</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">3</span>, <span class="number">44</span>, <span class="number">38</span>, <span class="number">5</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">36</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">2</span>, <span class="number">46</span>, <span class="number">4</span>, <span class="number">19</span>, <span class="number">50</span>, <span class="number">48</span>];</span><br><span class="line"><span class="built_in">console</span>.log(insertionSort(arr));</span><br></pre></td></tr></table></figure><h1 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h1><h2 id="算法简介-2"><a href="#算法简介-2" class="headerlink" title="算法简介"></a>算法简介</h2><p>基本思想：</p><ul><li>1、先从数列中取出一个数作为基准.</li><li>2、分区过程:将比这个数大的数全放在它的右边，小于或等于它的数全放到它的左边。</li><li>3、再对左右区间重复第二步，直到各区间只有一个数。</li></ul><h2 id="算法描述-3"><a href="#算法描述-3" class="headerlink" title="算法描述"></a>算法描述</h2><ul><li>1、i = L;j = R；将基准数挖出作为第一个坑a[i];</li><li>2、j–有后向前找比它小的数，找到后挖出此数填前一个坑a[i]中；</li><li>3、i++由前向后找比它大的数，找到后也挖出此数填到前一个坑a[j]中；</li><li>4、再重复执行2、3二步，直到i==j，将基准数填进a[i]中；</li></ul><h2 id="javascript代码实现"><a href="#javascript代码实现" class="headerlink" title="javascript代码实现"></a>javascript代码实现</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quickSort</span>(<span class="params">array, left, right</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (left &lt; right) &#123;</span><br><span class="line">                <span class="keyword">var</span> x = array[right],</span><br><span class="line">                    i = left - <span class="number">1</span>,</span><br><span class="line">                    temp;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> j = left; j &lt;= right; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (array[j] &lt;= x) &#123;</span><br><span class="line">                        i++;</span><br><span class="line">                        temp = array[i];</span><br><span class="line">                        array[i] = array[j];</span><br><span class="line">                        array[j] = temp;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                quickSort(array, left, i - <span class="number">1</span>);</span><br><span class="line">                quickSort(array, i + <span class="number">1</span>, right);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> array;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> array = [<span class="number">3</span>, <span class="number">44</span>, <span class="number">38</span>, <span class="number">5</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">36</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">2</span>, <span class="number">46</span>, <span class="number">4</span>, <span class="number">19</span>, <span class="number">50</span>, <span class="number">48</span>];</span><br><span class="line">        <span class="built_in">console</span>.log(quickSort(array,<span class="number">0</span>, array.length - <span class="number">1</span>));<span class="comment">//[2, 3, 4, 5, 15, 19, 26, 27, 36, 38, 44, 46, 47, 48, 50]</span></span><br></pre></td></tr></table></figure><blockquote><p>改进</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quickSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (arr.length &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> arr;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> pivotIndex = <span class="built_in">Math</span>.floor(arr.length / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> pivot = arr.splice(pivotIndex, <span class="number">1</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">var</span> left = [];</span><br><span class="line">        <span class="keyword">var</span> right = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] &lt; pivot) &#123;</span><br><span class="line">                left.push(arr[i])</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                right.push(arr[i])</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> quickSort(left).concat([pivot], quickSort(right));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="number">3</span>, <span class="number">44</span>, <span class="number">38</span>, <span class="number">5</span>, <span class="number">47</span>, <span class="number">15</span>, <span class="number">36</span>, <span class="number">26</span>, <span class="number">27</span>, <span class="number">2</span>, <span class="number">46</span>, <span class="number">4</span>, <span class="number">19</span>, <span class="number">50</span>, <span class="number">48</span>];</span><br><span class="line">    <span class="built_in">console</span>.log(quickSort(arr));<span class="comment">//[2, 3, 4, 5, 15, 19, 26, 27, 36, 38, 44, 46, 47, 48, 50]</span></span><br></pre></td></tr></table></figure><p>作者：Damonare<br>链接：<a href="https://juejin.im/post/57dcd394a22b9d00610c5ec8" target="_blank" rel="noopener">https://juejin.im/post/57dcd394a22b9d00610c5ec8</a><br>来源：掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;排序的定义：对一系列对象根据某个关键字进行排序&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;冒泡排序-Bubble-Sort&quot;&gt;&lt;a href=&quot;#冒泡排序-Bubble-Sort&quot; class=&quot;headerlink&quot; title=&quot;冒泡排序(Bubble Sort)&quot;&gt;&lt;/a&gt;冒泡排序(Bubble Sort)&lt;/h1&gt;&lt;h2 id=&quot;算法描述&quot;&gt;&lt;a href=&quot;#算法描述&quot; class=&quot;headerlink&quot; title=&quot;算法描述:&quot;&gt;&lt;/a&gt;算法描述:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;1、比较相邻的元素。如果第一个比第二个大，就交换它们两个；&lt;/li&gt;
&lt;li&gt;2、对每一对相邻的元素做相同的工作，从开始第一队到最后一对，这样在最后的元素应该是最大的数；&lt;/li&gt;
&lt;li&gt;3、针对所有的元素重复以上步骤，除了最后一个&lt;/li&gt;
&lt;li&gt;4、重复步骤1~3，直到排序完成；&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>钟表</title>
    <link href="http://yoursite.com/2019/08/27/%E9%92%9F%E8%A1%A8/"/>
    <id>http://yoursite.com/2019/08/27/钟表/</id>
    <published>2019-08-27T14:17:20.000Z</published>
    <updated>2019-08-29T11:34:44.903Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写的及其麻烦的一个钟表，只为了把新学到的知识用一下，在顺带复习复习。"><a href="#写的及其麻烦的一个钟表，只为了把新学到的知识用一下，在顺带复习复习。" class="headerlink" title="写的及其麻烦的一个钟表，只为了把新学到的知识用一下，在顺带复习复习。"></a>写的及其麻烦的一个钟表，只为了把新学到的知识用一下，在顺带复习复习。</h2><a id="more"></a><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        *&#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">            font-family: '微软雅黑'；</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        html,body &#123;</span><br><span class="line">            height: 100%;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">            background: linear-gradient(#a7a7a7, #d7d7d7)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-wrapper &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            top: 50%;</span><br><span class="line">            right: 0;</span><br><span class="line">            bottom: 50%;</span><br><span class="line">            left: 0;</span><br><span class="line">            width: 250px;</span><br><span class="line">            height: 250px;</span><br><span class="line">            margin: auto;</span><br><span class="line">            padding: 5px;</span><br><span class="line">            background: linear-gradient(#f7f7f7, #e0e0e0);</span><br><span class="line">            border-radius: 50%;</span><br><span class="line">            box-shadow: 0 10px 15px rgba(0, 0, 0, .15), 0 2px 2px rgba(0, 0, 0, .2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-base &#123;</span><br><span class="line">            width: 250px;</span><br><span class="line">            height: 250px;</span><br><span class="line">            background: #eee;</span><br><span class="line">            border-radius: 50%;</span><br><span class="line">            box-shadow: 0 0 5px #eee;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-dial &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            z-index: 1;</span><br><span class="line">            top: 15px;</span><br><span class="line">            left: 15px;</span><br><span class="line">            width: 230px;</span><br><span class="line">            height: 230px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-dial .clock-indicator &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            width: 2px;</span><br><span class="line">            height: 4px;</span><br><span class="line">            margin: 113px 114px;</span><br><span class="line">            background: #fff;</span><br><span class="line">        &#125;</span><br><span class="line">        .clock-indicator span&#123;</span><br><span class="line">            width: 24px;</span><br><span class="line">            height: 12px;</span><br><span class="line">            position: absolute;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        .clock-indicator:nth-child(1) &#123;</span><br><span class="line">            transform: rotate(30deg) translateY(-113px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-indicator:nth-child(2) &#123;</span><br><span class="line">            transform: rotate(60deg) translateY(-113px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-indicator:nth-child(3) &#123;</span><br><span class="line">            transform: rotate(90deg) translateY(-113px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-indicator:nth-child(4) &#123;</span><br><span class="line">            transform: rotate(120deg) translateY(-113px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-indicator:nth-child(5) &#123;</span><br><span class="line">            transform: rotate(150deg) translateY(-113px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-indicator:nth-child(6) &#123;</span><br><span class="line">            transform: rotate(180deg) translateY(-113px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-indicator:nth-child(7) &#123;</span><br><span class="line">            transform: rotate(210deg) translateY(-113px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-indicator:nth-child(8) &#123;</span><br><span class="line">            transform: rotate(240deg) translateY(-113px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-indicator:nth-child(9) &#123;</span><br><span class="line">            transform: rotate(270deg) translateY(-113px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-indicator:nth-child(10) &#123;</span><br><span class="line">            transform: rotate(300deg) translateY(-113px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-indicator:nth-child(11) &#123;</span><br><span class="line">            transform: rotate(330deg) translateY(-113px);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-indicator:nth-child(12) &#123;</span><br><span class="line">            transform: rotate(360deg) translateY(-113px);</span><br><span class="line">            background: #c00;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-hour &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            z-index: 2;</span><br><span class="line">            top: 80px;</span><br><span class="line">            left: 128px;</span><br><span class="line">            width: 4px;</span><br><span class="line">            height: 65px;</span><br><span class="line">            background: #555;</span><br><span class="line">            border-radius: 2px;</span><br><span class="line">            box-shadow: 0 0 2px rgba(0, 0, 0, .2);</span><br><span class="line">            transform-origin: 2px 50px;</span><br><span class="line">            /* transition: .5s; */</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">            /* animation: rotate-hour 3600s linear infinite; */</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-minute &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            z-index: 3;</span><br><span class="line">            top: 60px;</span><br><span class="line">            left: 128px;</span><br><span class="line">            width: 4px;</span><br><span class="line">            height: 85px;</span><br><span class="line">            background: #555;</span><br><span class="line">            border-radius: 2px;</span><br><span class="line">            box-shadow: 0 0 2px rgba(0, 0, 0, .2);</span><br><span class="line">            transform-origin: 2px 70px;</span><br><span class="line">            /* transition: .5s; */</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">            /* animation: rotate-minute 60s linear infinite; */</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-second &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            z-index: 4;</span><br><span class="line">            top: 20px;</span><br><span class="line">            left: 129px;</span><br><span class="line">            width: 2px;</span><br><span class="line">            height: 130px;</span><br><span class="line">            background: #a00;</span><br><span class="line">            box-shadow: 0 0 2px rgba(0, 0, 0, .2);</span><br><span class="line">            transform-origin: 1px 110px;</span><br><span class="line">            /* transition: 1s; */</span><br><span class="line">            transform: rotate(0deg);</span><br><span class="line">            /* animation: rotate-second 1s linear infinite; */</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-second::after &#123;</span><br><span class="line">            content: "";</span><br><span class="line">            display: block;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: -5px;</span><br><span class="line">            bottom: 14px;</span><br><span class="line">            width: 8px;</span><br><span class="line">            height: 8px;</span><br><span class="line">            background-color: #a00;</span><br><span class="line">            border: solid 2px #a00;</span><br><span class="line">            border-radius: 50%;</span><br><span class="line">            box-shadow: 0 0 3px rgba(0, 0, 0, .2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-center &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            z-index: 1;</span><br><span class="line">            width: 150px;</span><br><span class="line">            height: 150px;</span><br><span class="line">            top: 55px;</span><br><span class="line">            left: 55px;</span><br><span class="line">            background: linear-gradient(#e3e3e3, #f7f7f7);</span><br><span class="line">            border-radius: 50%;</span><br><span class="line">            box-shadow: inset 0 -1px 0 #fafafa, inset 0 1px 0 #e3e3e3;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .clock-center::after &#123;</span><br><span class="line">            content: "";</span><br><span class="line">            display: block;</span><br><span class="line">            width: 20px;</span><br><span class="line">            height: 20px;</span><br><span class="line">            margin: 65px;</span><br><span class="line">            background: #ddd;</span><br><span class="line">            border-radius: 50%;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock-wrapper"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock-base"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock-dial"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dic</span> <span class="attr">class</span>=<span class="string">"clock-indicator"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>A<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dic</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dic</span> <span class="attr">class</span>=<span class="string">"clock-indicator"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dic</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dic</span> <span class="attr">class</span>=<span class="string">"clock-indicator"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>三<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dic</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dic</span> <span class="attr">class</span>=<span class="string">"clock-indicator"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>肆<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dic</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dic</span> <span class="attr">class</span>=<span class="string">"clock-indicator"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>五<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dic</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dic</span> <span class="attr">class</span>=<span class="string">"clock-indicator"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>Ⅵ<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dic</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dic</span> <span class="attr">class</span>=<span class="string">"clock-indicator"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>Ⅶ<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dic</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dic</span> <span class="attr">class</span>=<span class="string">"clock-indicator"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>捌<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dic</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dic</span> <span class="attr">class</span>=<span class="string">"clock-indicator"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>9<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dic</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dic</span> <span class="attr">class</span>=<span class="string">"clock-indicator"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>十<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dic</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dic</span> <span class="attr">class</span>=<span class="string">"clock-indicator"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>J<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dic</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">dic</span> <span class="attr">class</span>=<span class="string">"clock-indicator"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span>&gt;</span>Q<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">dic</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock-hour"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock-minute"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock-second"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"clock-center"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> hourDeg = <span class="built_in">document</span>.querySelector(<span class="string">'.clock-hour'</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> minuteDeg = <span class="built_in">document</span>.querySelector(<span class="string">'.clock-minute'</span>)</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> secondDeg = <span class="built_in">document</span>.querySelector(<span class="string">'.clock-second'</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> hour = now.getHours();</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> hours = hour &lt; <span class="number">12</span> ? hour : hour - <span class="number">12</span>;</span></span><br><span class="line"><span class="javascript">            secondDeg.style.transform = <span class="string">'rotate('</span> + ((now.getSeconds()) * <span class="number">6</span> + now.getMilliseconds() * <span class="number">0.006</span>) + <span class="string">'deg)'</span>;</span></span><br><span class="line"><span class="javascript">            minuteDeg.style.transform = <span class="string">'rotate('</span> + ((now.getMinutes()) * <span class="number">6</span> + now.getSeconds() * <span class="number">.1</span>) + <span class="string">'deg)'</span>;</span></span><br><span class="line"><span class="javascript">            hourDeg.style.transform = <span class="string">'rotate('</span> + ((hours) * <span class="number">30</span> + now.getMinutes() * <span class="number">0.5</span>) + <span class="string">'deg)'</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">        c()</span><br><span class="line"><span class="javascript">        setInterval(<span class="string">'c()'</span>, <span class="number">1</span>);</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://s2.ax1x.com/2019/08/27/moF7ND.jpg">]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;写的及其麻烦的一个钟表，只为了把新学到的知识用一下，在顺带复习复习。&quot;&gt;&lt;a href=&quot;#写的及其麻烦的一个钟表，只为了把新学到的知识用一下，在顺带复习复习。&quot; class=&quot;headerlink&quot; title=&quot;写的及其麻烦的一个钟表，只为了把新学到的知识用一下，在顺带复习复习。&quot;&gt;&lt;/a&gt;写的及其麻烦的一个钟表，只为了把新学到的知识用一下，在顺带复习复习。&lt;/h2&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>保佑</title>
    <link href="http://yoursite.com/2019/08/27/%E4%BF%9D%E4%BD%91/"/>
    <id>http://yoursite.com/2019/08/27/保佑/</id>
    <published>2019-08-27T11:07:05.000Z</published>
    <updated>2019-08-27T11:10:06.665Z</updated>
    
    <content type="html"><![CDATA[<pre><code class="js">                   _ooOoo_                  o8888888o                  <span class="number">88</span><span class="string">" . "</span><span class="number">88</span>                  (| -_- |)                  O\  =  <span class="regexp">/O</span><span class="regexp">               ____/</span><span class="string">`---'\____</span><span class="string">             .'  \\|     |//  `</span>.            /  \\|||  :  |||<span class="comment">//  \</span>           /  _||||| -:- |||||-  \           |   | \\\  -  <span class="comment">/// |   |</span>           | \_|  <span class="string">''</span>\---<span class="regexp">/''  |   |</span><span class="regexp">           \  .-\__  `-`  ___/</span>-. /         ___<span class="string">`. .'  /--.--\  `</span>. .       .<span class="string">""</span> <span class="string">'&lt;  `.___\_&lt;|&gt;_/___.'</span>  &gt;<span class="string">'"".</span><span class="string">     | | :  `- \`.;`\ _ /`;.`/ - ` : | |</span><span class="string">     \  \ `-.   \_ __\ /__ _/   .-` /  /</span><span class="string">======`-.____`-.___\_____/___.-`____.-'</span>======                   <span class="string">`=---='</span><span class="string">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class="string"></span><span class="string">      佛祖保佑      永无BUG      永不修改</span><span class="string"></span><span class="string">                   佛曰:</span><span class="string">         写字楼里写字间，写字间里程序员；</span><span class="string"></span><span class="string">         程序人员写程序，又拿程序换酒钱。</span><span class="string"></span><span class="string">         酒醒只在网上坐，酒醉还来网下眠；</span><span class="string"></span><span class="string">         酒醉酒醒日复日，网上网下年复年。</span><span class="string"></span><span class="string">         但愿老死电脑间，不愿鞠躬老板前；</span><span class="string"></span><span class="string">         奔驰宝马贵者趣，公交自行程序员。</span><span class="string"></span><span class="string">         别人笑我忒疯癫，我笑自己命太贱；</span><span class="string"></span><span class="string">         不见满街漂亮妹，哪个归得程序员？</span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code class=&quot;js&quot;&gt;                   _ooOoo_
                  o8888888o
                  &lt;span class=&quot;number&quot;&gt;88&lt;/span&gt;&lt;span class=&quot;st
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
